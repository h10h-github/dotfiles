var search_data = {"index":{"searchIndex":["loofah","documentdecorator","elements","html","html5","scrub","whitelist","document","documentfragment","helpers","actionview","classmethods","fullsanitizer","whitelistsanitizer","metahelpers","scrubbehavior","node","nodeset","scrubber","scrubbernotfound","scrubbers","escape","newlineblockelements","nofollow","prune","strip","unprintable","whitewash","textbehavior","xml","document","documentfragment","allowed_element?()","document()","fragment()","html5lib_sanitize()","inner_text()","new()","new()","new()","new()","new()","new()","new()","parse()","parse()","remove_extraneous_whitespace()","sanitize()","sanitize_css()","scrub()","scrub()","scrub()","scrub()","scrub()","scrub()","scrub()","scrub_attributes()","scrub_css()","scrub_css_attribute()","scrub_document()","scrub_fragment()","scrub_xml_document()","scrub_xml_fragment()","scrubber_symbols()","serialize()","serialize_root()","serialize_root()","strip_tags()","text()","to_s()","to_str()","to_text()","traverse()","traverse_conditionally_bottom_up()","traverse_conditionally_top_down()","xml_document()","xml_fragment()","changelog","mit-license","manifest","readme"],"longSearchIndex":["loofah","loofah::documentdecorator","loofah::elements","loofah::html","loofah::html5","loofah::html5::scrub","loofah::html5::whitelist","loofah::html::document","loofah::html::documentfragment","loofah::helpers","loofah::helpers::actionview","loofah::helpers::actionview::classmethods","loofah::helpers::actionview::fullsanitizer","loofah::helpers::actionview::whitelistsanitizer","loofah::metahelpers","loofah::scrubbehavior","loofah::scrubbehavior::node","loofah::scrubbehavior::nodeset","loofah::scrubber","loofah::scrubbernotfound","loofah::scrubbers","loofah::scrubbers::escape","loofah::scrubbers::newlineblockelements","loofah::scrubbers::nofollow","loofah::scrubbers::prune","loofah::scrubbers::strip","loofah::scrubbers::unprintable","loofah::scrubbers::whitewash","loofah::textbehavior","loofah::xml","loofah::xml::document","loofah::xml::documentfragment","loofah::html5::scrub#allowed_element?()","loofah#document()","loofah#fragment()","loofah::scrubber#html5lib_sanitize()","loofah::textbehavior#inner_text()","loofah::scrubber::new()","loofah::scrubbers::escape::new()","loofah::scrubbers::nofollow::new()","loofah::scrubbers::prune::new()","loofah::scrubbers::strip::new()","loofah::scrubbers::unprintable::new()","loofah::scrubbers::whitewash::new()","loofah::html::documentfragment#parse()","loofah::xml::documentfragment#parse()","loofah::helpers#remove_extraneous_whitespace()","loofah::helpers#sanitize()","loofah::helpers#sanitize_css()","loofah::scrubber#scrub()","loofah::scrubbers::escape#scrub()","loofah::scrubbers::nofollow#scrub()","loofah::scrubbers::prune#scrub()","loofah::scrubbers::strip#scrub()","loofah::scrubbers::unprintable#scrub()","loofah::scrubbers::whitewash#scrub()","loofah::html5::scrub#scrub_attributes()","loofah::html5::scrub#scrub_css()","loofah::html5::scrub#scrub_css_attribute()","loofah#scrub_document()","loofah#scrub_fragment()","loofah#scrub_xml_document()","loofah#scrub_xml_fragment()","loofah::scrubbers::scrubber_symbols()","loofah::html::documentfragment#serialize()","loofah::html::document#serialize_root()","loofah::html::documentfragment#serialize_root()","loofah::helpers#strip_tags()","loofah::textbehavior#text()","loofah::html::documentfragment#to_s()","loofah::textbehavior#to_str()","loofah::textbehavior#to_text()","loofah::scrubber#traverse()","loofah::scrubber#traverse_conditionally_bottom_up()","loofah::scrubber#traverse_conditionally_top_down()","loofah#xml_document()","loofah#xml_fragment()","","","",""],"info":[["Loofah","","Loofah.html","","<p>Strings and IO Objects as Input\n<p>Loofah.document and Loofah.fragment accept any IO object in addition to …\n"],["Loofah::DocumentDecorator","","Loofah/DocumentDecorator.html","",""],["Loofah::Elements","","Loofah/Elements.html","",""],["Loofah::HTML","","Loofah/HTML.html","",""],["Loofah::HTML5","","Loofah/HTML5.html","",""],["Loofah::HTML5::Scrub","","Loofah/HTML5/Scrub.html","",""],["Loofah::HTML5::WhiteList","","Loofah/HTML5/WhiteList.html","","\n<pre>HTML whitelist lifted from HTML5lib sanitizer code:\n\n  http://code.google.com/p/html5lib/</pre>\n<p>&lt;html5_license&gt; …\n"],["Loofah::HTML::Document","","Loofah/HTML/Document.html","","<p>Subclass of Nokogiri::HTML::Document.\n<p>See Loofah::ScrubBehavior and Loofah::TextBehavior for additional …\n"],["Loofah::HTML::DocumentFragment","","Loofah/HTML/DocumentFragment.html","","<p>Subclass of Nokogiri::HTML::DocumentFragment.\n<p>See Loofah::ScrubBehavior and Loofah::TextBehavior for additional …\n"],["Loofah::Helpers","","Loofah/Helpers.html","",""],["Loofah::Helpers::ActionView","","Loofah/Helpers/ActionView.html","",""],["Loofah::Helpers::ActionView::ClassMethods","","Loofah/Helpers/ActionView/ClassMethods.html","",""],["Loofah::Helpers::ActionView::FullSanitizer","","Loofah/Helpers/ActionView/FullSanitizer.html","",""],["Loofah::Helpers::ActionView::WhiteListSanitizer","","Loofah/Helpers/ActionView/WhiteListSanitizer.html","",""],["Loofah::MetaHelpers","","Loofah/MetaHelpers.html","",""],["Loofah::ScrubBehavior","","Loofah/ScrubBehavior.html","","<p>Mixes <code>scrub!</code> into Document, DocumentFragment, Node and\nNodeSet.\n<p>Traverse the document or fragment, invoking …\n"],["Loofah::ScrubBehavior::Node","","Loofah/ScrubBehavior/Node.html","",""],["Loofah::ScrubBehavior::NodeSet","","Loofah/ScrubBehavior/NodeSet.html","",""],["Loofah::Scrubber","","Loofah/Scrubber.html","","<p>A Scrubber wraps up a block (or method) that is run on an HTML node\n(element):\n\n<pre># change all &lt;span&gt; tags ...</pre>\n"],["Loofah::ScrubberNotFound","","Loofah/ScrubberNotFound.html","","<p>A RuntimeError raised when Loofah could not find an appropriate scrubber.\n"],["Loofah::Scrubbers","","Loofah/Scrubbers.html","","<p>Loofah provides some built-in scrubbers for sanitizing with HTML5lib&#39;s\nwhitelist and for accomplishing …\n"],["Loofah::Scrubbers::Escape","","Loofah/Scrubbers/Escape.html","","<p>scrub!(:escape)\n<p><code>:escape</code> performs HTML entity escaping on the unknown/unsafe\ntags:\n\n<pre>unsafe_html = &quot;ohai! ...</pre>\n"],["Loofah::Scrubbers::NewlineBlockElements","","Loofah/Scrubbers/NewlineBlockElements.html","",""],["Loofah::Scrubbers::NoFollow","","Loofah/Scrubbers/NoFollow.html","","<p>scrub!(:nofollow)\n<p><code>:nofollow</code> adds a rel=“nofollow” attribute to all links\n\n<pre>link_farmers_markup ...</pre>\n"],["Loofah::Scrubbers::Prune","","Loofah/Scrubbers/Prune.html","","<p>scrub!(:prune)\n<p><code>:prune</code> removes unknown/unsafe tags and their contents\n(including their subtrees):\n\n<pre>unsafe_html ...</pre>\n"],["Loofah::Scrubbers::Strip","","Loofah/Scrubbers/Strip.html","","<p>scrub!(:strip)\n<p><code>:strip</code> removes unknown/unsafe tags, but leaves behind the\npristine contents:\n\n<pre>unsafe_html ...</pre>\n"],["Loofah::Scrubbers::Unprintable","","Loofah/Scrubbers/Unprintable.html","","<p>scrub!(:unprintable)\n<p><code>:unprintable</code> removes unprintable Unicode characters.\n\n<pre>markup = &quot;&lt;p&gt;Some text with an ...</pre>\n"],["Loofah::Scrubbers::Whitewash","","Loofah/Scrubbers/Whitewash.html","","<p>scrub!(:whitewash)\n<p><code>:whitewash</code> removes all comments, styling and attributes in\naddition to doing markup-fixer-uppery …\n"],["Loofah::TextBehavior","","Loofah/TextBehavior.html","","<p>Overrides <code>text</code> in HTML::Document and HTML::DocumentFragment,\nand mixes in <code>to_text</code>.\n"],["Loofah::XML","","Loofah/XML.html","",""],["Loofah::XML::Document","","Loofah/XML/Document.html","","<p>Subclass of Nokogiri::XML::Document.\n<p>See Loofah::ScrubBehavior and Loofah::DocumentDecorator for additional …\n"],["Loofah::XML::DocumentFragment","","Loofah/XML/DocumentFragment.html","","<p>Subclass of Nokogiri::XML::DocumentFragment.\n<p>See Loofah::ScrubBehavior for additional methods.\n"],["allowed_element?","Loofah::HTML5::Scrub","Loofah/HTML5/Scrub.html#method-i-allowed_element-3F","(element_name)",""],["document","Loofah","Loofah.html#method-i-document","(*args, &block)","<p>Shortcut for Loofah::HTML::Document.parse This method accepts the same\nparameters as Nokogiri::HTML::Document.parse …\n"],["fragment","Loofah","Loofah.html#method-i-fragment","(*args, &block)","<p>Shortcut for Loofah::HTML::DocumentFragment.parse This method accepts the\nsame parameters as Nokogiri::HTML::DocumentFragment.parse …\n"],["html5lib_sanitize","Loofah::Scrubber","Loofah/Scrubber.html#method-i-html5lib_sanitize","(node)",""],["inner_text","Loofah::TextBehavior","Loofah/TextBehavior.html#method-i-inner_text","(options={})",""],["new","Loofah::Scrubber","Loofah/Scrubber.html#method-c-new","(options = {}, &block)","<p>Options may include\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">direction</span> =<span class=\"ruby-operator\">&gt;</span> :<span class=\"ruby-identifier\">top_down</span> (<span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">default</span>)\n</pre>\n<p>or\n"],["new","Loofah::Scrubbers::Escape","Loofah/Scrubbers/Escape.html#method-c-new","()",""],["new","Loofah::Scrubbers::NoFollow","Loofah/Scrubbers/NoFollow.html#method-c-new","()",""],["new","Loofah::Scrubbers::Prune","Loofah/Scrubbers/Prune.html#method-c-new","()",""],["new","Loofah::Scrubbers::Strip","Loofah/Scrubbers/Strip.html#method-c-new","()",""],["new","Loofah::Scrubbers::Unprintable","Loofah/Scrubbers/Unprintable.html#method-c-new","()",""],["new","Loofah::Scrubbers::Whitewash","Loofah/Scrubbers/Whitewash.html#method-c-new","()",""],["parse","Loofah::HTML::DocumentFragment","Loofah/HTML/DocumentFragment.html#method-i-parse","(tags, encoding = nil)","<p>Overridden Nokogiri::HTML::DocumentFragment constructor. Applications\nshould use Loofah.fragment to parse …\n"],["parse","Loofah::XML::DocumentFragment","Loofah/XML/DocumentFragment.html#method-i-parse","(tags)","<p>Overridden Nokogiri::XML::DocumentFragment constructor. Applications should\nuse Loofah.fragment to parse …\n"],["remove_extraneous_whitespace","Loofah::Helpers","Loofah/Helpers.html#method-i-remove_extraneous_whitespace","(string)","<p>A helper to remove extraneous whitespace from text-ified HTML\n"],["sanitize","Loofah::Helpers","Loofah/Helpers.html#method-i-sanitize","(string_or_io)","<p>A replacement for Rails&#39;s built-in <code>sanitize</code> helper.\n\n<pre>Loofah::Helpers.sanitize(&quot;&lt;script src=http://ha.ckers.org/xss.js&gt;&lt;/script&gt;&quot;) ...</pre>\n"],["sanitize_css","Loofah::Helpers","Loofah/Helpers.html#method-i-sanitize_css","(style_string)","<p>A replacement for Rails&#39;s built-in <code>sanitize_css</code> helper.\n\n<pre>Loofah::Helpers.sanitize_css(&quot;display:block;background-image:url(http://www.ragingplatypus.com/i/cam-full.jpg)&quot;) ...</pre>\n"],["scrub","Loofah::Scrubber","Loofah/Scrubber.html#method-i-scrub","(node)","<p>When <code>new</code> is not passed a block, the class may implement\n<code>scrub</code>, which will be called for each document …\n"],["scrub","Loofah::Scrubbers::Escape","Loofah/Scrubbers/Escape.html#method-i-scrub","(node)",""],["scrub","Loofah::Scrubbers::NoFollow","Loofah/Scrubbers/NoFollow.html#method-i-scrub","(node)",""],["scrub","Loofah::Scrubbers::Prune","Loofah/Scrubbers/Prune.html#method-i-scrub","(node)",""],["scrub","Loofah::Scrubbers::Strip","Loofah/Scrubbers/Strip.html#method-i-scrub","(node)",""],["scrub","Loofah::Scrubbers::Unprintable","Loofah/Scrubbers/Unprintable.html#method-i-scrub","(node)",""],["scrub","Loofah::Scrubbers::Whitewash","Loofah/Scrubbers/Whitewash.html#method-i-scrub","(node)",""],["scrub_attributes","Loofah::HTML5::Scrub","Loofah/HTML5/Scrub.html#method-i-scrub_attributes","(node)","<p>alternative implementation of the html5lib attribute scrubbing algorithm\n"],["scrub_css","Loofah::HTML5::Scrub","Loofah/HTML5/Scrub.html#method-i-scrub_css","(style)","<p>lifted nearly verbatim from html5lib\n"],["scrub_css_attribute","Loofah::HTML5::Scrub","Loofah/HTML5/Scrub.html#method-i-scrub_css_attribute","(node)",""],["scrub_document","Loofah","Loofah.html#method-i-scrub_document","(string_or_io, method)","<p>Shortcut for Loofah.document(string_or_io).scrub!(method)\n"],["scrub_fragment","Loofah","Loofah.html#method-i-scrub_fragment","(string_or_io, method)","<p>Shortcut for Loofah.fragment(string_or_io).scrub!(method)\n"],["scrub_xml_document","Loofah","Loofah.html#method-i-scrub_xml_document","(string_or_io, method)","<p>Shortcut for Loofah.xml_document(string_or_io).scrub!(method)\n"],["scrub_xml_fragment","Loofah","Loofah.html#method-i-scrub_xml_fragment","(string_or_io, method)","<p>Shortcut for Loofah.xml_fragment(string_or_io).scrub!(method)\n"],["scrubber_symbols","Loofah::Scrubbers","Loofah/Scrubbers.html#method-c-scrubber_symbols","()","<p>Returns an array of symbols representing the built-in scrubbers\n"],["serialize","Loofah::HTML::DocumentFragment","Loofah/HTML/DocumentFragment.html#method-i-serialize","()",""],["serialize_root","Loofah::HTML::Document","Loofah/HTML/Document.html#method-i-serialize_root","()",""],["serialize_root","Loofah::HTML::DocumentFragment","Loofah/HTML/DocumentFragment.html#method-i-serialize_root","()",""],["strip_tags","Loofah::Helpers","Loofah/Helpers.html#method-i-strip_tags","(string_or_io)","<p>A replacement for Rails&#39;s built-in <code>strip_tags</code> helper.\n\n<pre>Loofah::Helpers.strip_tags(&quot;&lt;div&gt;Hello &lt;b&gt;there&lt;/b&gt;&lt;/div&gt;&quot;) ...</pre>\n"],["text","Loofah::TextBehavior","Loofah/TextBehavior.html#method-i-text","(options={})","<p>Returns a plain-text version of the markup contained by the document, with\nHTML entities encoded.\n<p>This …\n"],["to_s","Loofah::HTML::DocumentFragment","Loofah/HTML/DocumentFragment.html#method-i-to_s","()","<p>Returns the HTML markup contained by the fragment\n"],["to_str","Loofah::TextBehavior","Loofah/TextBehavior.html#method-i-to_str","(options={})",""],["to_text","Loofah::TextBehavior","Loofah/TextBehavior.html#method-i-to_text","(options={})","<p>Returns a plain-text version of the markup contained by the fragment, with\nHTML entities encoded.\n<p>This …\n"],["traverse","Loofah::Scrubber","Loofah/Scrubber.html#method-i-traverse","(node)","<p>Calling <code>traverse</code> will cause the document to be traversed by\neither the lambda passed to the initializer …\n"],["traverse_conditionally_bottom_up","Loofah::Scrubber","Loofah/Scrubber.html#method-i-traverse_conditionally_bottom_up","(node)",""],["traverse_conditionally_top_down","Loofah::Scrubber","Loofah/Scrubber.html#method-i-traverse_conditionally_top_down","(node)",""],["xml_document","Loofah","Loofah.html#method-i-xml_document","(*args, &block)","<p>Shortcut for Loofah::XML::Document.parse This method accepts the same\nparameters as Nokogiri::XML::Document.parse …\n"],["xml_fragment","Loofah","Loofah.html#method-i-xml_fragment","(*args, &block)","<p>Shortcut for Loofah::XML::DocumentFragment.parse This method accepts the\nsame parameters as Nokogiri::XML::DocumentFragment.parse …\n"],["CHANGELOG","","CHANGELOG_rdoc.html","","<p>Changelog\n<p>2.0.1 / 2014-08-21\n<p>Bug fixes:\n"],["MIT-LICENSE","","MIT-LICENSE_txt.html","","<p>The MIT License\n<p>The MIT License\n<p>Copyright © 2009 – 2014 by Mike Dalessio, Bryan Helmkamp\n"],["Manifest","","Manifest_txt.html","","<p>CHANGELOG.rdoc Gemfile MIT-LICENSE.txt Manifest.txt README.rdoc Rakefile\nbenchmark/benchmark.rb benchmark/fragment.html …\n"],["README","","README_rdoc.html","","<p>Loofah <img src=\"https://travis-ci.org/flavorjones/loofah.png?branch=master\" alt=\"Build Status\" />\n<p>github.com/flavorjones/loofah …\n"]]}}