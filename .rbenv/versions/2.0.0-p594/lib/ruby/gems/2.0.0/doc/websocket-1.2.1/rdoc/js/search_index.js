var search_data = {"index":{"searchIndex":["websocket","error","frame","controlframepayloadtoolong","dataframeinsteadcontinuation","fragmentedcontrolframe","invalid","invalidpayloadencoding","masktooshort","reservedbitused","toolong","unexpectedcontinuationframe","unknownclosecode","unknownframetype","unknownopcode","unknownversion","handshake","getrequestrequired","invalidauthentication","invalidheader","invalidstatuscode","nohostprovided","unknownversion","exceptionhandler","classmethods","frame","base","data","handler","base","handler03","handler04","handler05","handler07","handler75","incoming","client","server","outgoing","client","server","handshake","base","client","handler","base","client","client01","client04","client75","client76","server","server04","server75","server76","server","<<()","<<()","<<()","<<()","<<()","accept()","challenge()","challenge_response()","control_frame?()","convert_args()","data_frame?()","decode_frame()","decode_frame()","decode_frame()","decode_frame()","decoded?()","encode_frame()","encode_frame()","encode_frame()","encode_frame()","error?()","fin()","fin()","finished?()","finishing_line()","finishing_line()","finishing_line()","from_hash()","from_rack()","generate_key()","generate_key3()","getbytes()","handshake_keys()","handshake_keys()","handshake_keys()","handshake_keys()","handshake_keys()","handshake_keys()","handshake_keys()","handshake_keys()","handshake_keys()","has_close_code?()","header_line()","header_line()","header_line()","header_line()","header_line()","host()","include_version()","include_version()","include_version()","included()","incoming_masking?()","incoming_masking?()","incoming_masking?()","incoming_masking?()","inspect()","inspect()","key()","key()","key1()","key2()","key3()","leftovers()","mask()","masking?()","masking?()","max_frame_size()","max_frame_size=()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","message()","new()","new()","new()","new()","new()","new()","new()","new()","next()","numbers_over_spaces()","opcode_to_type()","opcode_to_type()","outgoing_masking?()","outgoing_masking?()","outgoing_masking?()","outgoing_masking?()","parse_data()","parse_first_line()","parse_first_line()","port()","require_sending?()","rescue_method()","reserved_leftover_lines()","reserved_leftover_lines()","reserved_leftover_lines()","set_error()","set_error()","set_mask()","set_version()","should_raise()","should_raise=()","should_respond?()","should_respond?()","should_respond?()","signature()","support_type?()","supported?()","supported_frames()","supported_frames()","supported_frames()","to_s()","to_s()","to_s()","to_s()","type_to_opcode()","type_to_opcode()","unset_mask()","uri()","valid?()","valid?()","valid?()","valid?()","valid?()","valid?()","valid_code?()","valid_encoding?()","verify_accept()","verify_challenge()","verify_key()"],"longSearchIndex":["websocket","websocket::error","websocket::error::frame","websocket::error::frame::controlframepayloadtoolong","websocket::error::frame::dataframeinsteadcontinuation","websocket::error::frame::fragmentedcontrolframe","websocket::error::frame::invalid","websocket::error::frame::invalidpayloadencoding","websocket::error::frame::masktooshort","websocket::error::frame::reservedbitused","websocket::error::frame::toolong","websocket::error::frame::unexpectedcontinuationframe","websocket::error::frame::unknownclosecode","websocket::error::frame::unknownframetype","websocket::error::frame::unknownopcode","websocket::error::frame::unknownversion","websocket::error::handshake","websocket::error::handshake::getrequestrequired","websocket::error::handshake::invalidauthentication","websocket::error::handshake::invalidheader","websocket::error::handshake::invalidstatuscode","websocket::error::handshake::nohostprovided","websocket::error::handshake::unknownversion","websocket::exceptionhandler","websocket::exceptionhandler::classmethods","websocket::frame","websocket::frame::base","websocket::frame::data","websocket::frame::handler","websocket::frame::handler::base","websocket::frame::handler::handler03","websocket::frame::handler::handler04","websocket::frame::handler::handler05","websocket::frame::handler::handler07","websocket::frame::handler::handler75","websocket::frame::incoming","websocket::frame::incoming::client","websocket::frame::incoming::server","websocket::frame::outgoing","websocket::frame::outgoing::client","websocket::frame::outgoing::server","websocket::handshake","websocket::handshake::base","websocket::handshake::client","websocket::handshake::handler","websocket::handshake::handler::base","websocket::handshake::handler::client","websocket::handshake::handler::client01","websocket::handshake::handler::client04","websocket::handshake::handler::client75","websocket::handshake::handler::client76","websocket::handshake::handler::server","websocket::handshake::handler::server04","websocket::handshake::handler::server75","websocket::handshake::handler::server76","websocket::handshake::server","websocket::frame::data#<<()","websocket::frame::incoming#<<()","websocket::handshake::base#<<()","websocket::handshake::client#<<()","websocket::handshake::server#<<()","websocket::handshake::handler::client04#accept()","websocket::handshake::handler::client76#challenge()","websocket::handshake::handler::server76#challenge_response()","websocket::frame::handler::base#control_frame?()","websocket::frame::data#convert_args()","websocket::frame::handler::base#data_frame?()","websocket::frame::handler::base#decode_frame()","websocket::frame::handler::handler03#decode_frame()","websocket::frame::handler::handler07#decode_frame()","websocket::frame::handler::handler75#decode_frame()","websocket::frame::incoming#decoded?()","websocket::frame::handler::base#encode_frame()","websocket::frame::handler::handler03#encode_frame()","websocket::frame::handler::handler07#encode_frame()","websocket::frame::handler::handler75#encode_frame()","websocket::frame::base#error?()","websocket::frame::handler::handler03#fin()","websocket::frame::handler::handler04#fin()","websocket::handshake::base#finished?()","websocket::handshake::handler::base#finishing_line()","websocket::handshake::handler::client76#finishing_line()","websocket::handshake::handler::server76#finishing_line()","websocket::handshake::server#from_hash()","websocket::handshake::server#from_rack()","websocket::handshake::handler::client76#generate_key()","websocket::handshake::handler::client76#generate_key3()","websocket::frame::data#getbytes()","websocket::handshake::handler::base#handshake_keys()","websocket::handshake::handler::client#handshake_keys()","websocket::handshake::handler::client01#handshake_keys()","websocket::handshake::handler::client04#handshake_keys()","websocket::handshake::handler::client75#handshake_keys()","websocket::handshake::handler::client76#handshake_keys()","websocket::handshake::handler::server04#handshake_keys()","websocket::handshake::handler::server75#handshake_keys()","websocket::handshake::handler::server76#handshake_keys()","websocket::frame::handler::handler07#has_close_code?()","websocket::handshake::handler::base#header_line()","websocket::handshake::handler::client#header_line()","websocket::handshake::handler::server04#header_line()","websocket::handshake::handler::server75#header_line()","websocket::handshake::handler::server76#header_line()","websocket::handshake::server#host()","websocket::frame::base#include_version()","websocket::handshake::client#include_version()","websocket::handshake::server#include_version()","websocket::exceptionhandler::included()","websocket::frame::incoming::client#incoming_masking?()","websocket::frame::incoming::server#incoming_masking?()","websocket::frame::outgoing::client#incoming_masking?()","websocket::frame::outgoing::server#incoming_masking?()","websocket::frame::base#inspect()","websocket::handshake::base#inspect()","websocket::handshake::handler::client04#key()","websocket::handshake::handler::server04#key()","websocket::handshake::handler::client76#key1()","websocket::handshake::handler::client76#key2()","websocket::handshake::handler::client76#key3()","websocket::handshake::base#leftovers()","websocket::frame::data#mask()","websocket::frame::handler::handler03#masking?()","websocket::frame::handler::handler05#masking?()","websocket::max_frame_size()","websocket::max_frame_size=()","websocket::error::frame::controlframepayloadtoolong#message()","websocket::error::frame::dataframeinsteadcontinuation#message()","websocket::error::frame::fragmentedcontrolframe#message()","websocket::error::frame::invalid#message()","websocket::error::frame::invalidpayloadencoding#message()","websocket::error::frame::masktooshort#message()","websocket::error::frame::reservedbitused#message()","websocket::error::frame::toolong#message()","websocket::error::frame::unexpectedcontinuationframe#message()","websocket::error::frame::unknownclosecode#message()","websocket::error::frame::unknownframetype#message()","websocket::error::frame::unknownopcode#message()","websocket::error::frame::unknownversion#message()","websocket::error::handshake::getrequestrequired#message()","websocket::error::handshake::invalidauthentication#message()","websocket::error::handshake::invalidheader#message()","websocket::error::handshake::invalidstatuscode#message()","websocket::error::handshake::nohostprovided#message()","websocket::error::handshake::unknownversion#message()","websocket::frame::base::new()","websocket::frame::data::new()","websocket::frame::handler::base::new()","websocket::frame::incoming::new()","websocket::handshake::base::new()","websocket::handshake::client::new()","websocket::handshake::handler::base::new()","websocket::handshake::server::new()","websocket::frame::incoming#next()","websocket::handshake::handler::server76#numbers_over_spaces()","websocket::frame::handler::handler03#opcode_to_type()","websocket::frame::handler::handler07#opcode_to_type()","websocket::frame::incoming::client#outgoing_masking?()","websocket::frame::incoming::server#outgoing_masking?()","websocket::frame::outgoing::client#outgoing_masking?()","websocket::frame::outgoing::server#outgoing_masking?()","websocket::handshake::base#parse_data()","websocket::handshake::client#parse_first_line()","websocket::handshake::server#parse_first_line()","websocket::handshake::server#port()","websocket::frame::outgoing#require_sending?()","websocket::exceptionhandler::classmethods#rescue_method()","websocket::handshake::base#reserved_leftover_lines()","websocket::handshake::handler::client76#reserved_leftover_lines()","websocket::handshake::handler::server76#reserved_leftover_lines()","websocket::exceptionhandler#set_error()","websocket::handshake::base#set_error()","websocket::frame::data#set_mask()","websocket::handshake::server#set_version()","websocket::should_raise()","websocket::should_raise=()","websocket::handshake::base#should_respond?()","websocket::handshake::client#should_respond?()","websocket::handshake::server#should_respond?()","websocket::handshake::handler::server04#signature()","websocket::frame::base#support_type?()","websocket::frame::outgoing#supported?()","websocket::frame::base#supported_frames()","websocket::frame::handler::handler03#supported_frames()","websocket::frame::handler::handler75#supported_frames()","websocket::frame::incoming#to_s()","websocket::frame::outgoing#to_s()","websocket::handshake::base#to_s()","websocket::handshake::handler::base#to_s()","websocket::frame::handler::handler03#type_to_opcode()","websocket::frame::handler::handler07#type_to_opcode()","websocket::frame::data#unset_mask()","websocket::handshake::base#uri()","websocket::handshake::base#valid?()","websocket::handshake::handler::base#valid?()","websocket::handshake::handler::client04#valid?()","websocket::handshake::handler::client76#valid?()","websocket::handshake::handler::server04#valid?()","websocket::handshake::handler::server76#valid?()","websocket::frame::handler::handler07#valid_code?()","websocket::frame::handler::handler07#valid_encoding?()","websocket::handshake::handler::client04#verify_accept()","websocket::handshake::handler::client76#verify_challenge()","websocket::handshake::handler::server04#verify_key()"],"info":[["WebSocket","","WebSocket.html","","<p>WebSocket protocol implementation in Ruby This module does not provide a\nWebSocket server or client, …\n"],["WebSocket::Error","","WebSocket/Error.html","",""],["WebSocket::Error::Frame","","WebSocket/Error/Frame.html","",""],["WebSocket::Error::Frame::ControlFramePayloadTooLong","","WebSocket/Error/Frame/ControlFramePayloadTooLong.html","",""],["WebSocket::Error::Frame::DataFrameInsteadContinuation","","WebSocket/Error/Frame/DataFrameInsteadContinuation.html","",""],["WebSocket::Error::Frame::FragmentedControlFrame","","WebSocket/Error/Frame/FragmentedControlFrame.html","",""],["WebSocket::Error::Frame::Invalid","","WebSocket/Error/Frame/Invalid.html","",""],["WebSocket::Error::Frame::InvalidPayloadEncoding","","WebSocket/Error/Frame/InvalidPayloadEncoding.html","",""],["WebSocket::Error::Frame::MaskTooShort","","WebSocket/Error/Frame/MaskTooShort.html","",""],["WebSocket::Error::Frame::ReservedBitUsed","","WebSocket/Error/Frame/ReservedBitUsed.html","",""],["WebSocket::Error::Frame::TooLong","","WebSocket/Error/Frame/TooLong.html","",""],["WebSocket::Error::Frame::UnexpectedContinuationFrame","","WebSocket/Error/Frame/UnexpectedContinuationFrame.html","",""],["WebSocket::Error::Frame::UnknownCloseCode","","WebSocket/Error/Frame/UnknownCloseCode.html","",""],["WebSocket::Error::Frame::UnknownFrameType","","WebSocket/Error/Frame/UnknownFrameType.html","",""],["WebSocket::Error::Frame::UnknownOpcode","","WebSocket/Error/Frame/UnknownOpcode.html","",""],["WebSocket::Error::Frame::UnknownVersion","","WebSocket/Error/Frame/UnknownVersion.html","",""],["WebSocket::Error::Handshake","","WebSocket/Error/Handshake.html","",""],["WebSocket::Error::Handshake::GetRequestRequired","","WebSocket/Error/Handshake/GetRequestRequired.html","",""],["WebSocket::Error::Handshake::InvalidAuthentication","","WebSocket/Error/Handshake/InvalidAuthentication.html","",""],["WebSocket::Error::Handshake::InvalidHeader","","WebSocket/Error/Handshake/InvalidHeader.html","",""],["WebSocket::Error::Handshake::InvalidStatusCode","","WebSocket/Error/Handshake/InvalidStatusCode.html","",""],["WebSocket::Error::Handshake::NoHostProvided","","WebSocket/Error/Handshake/NoHostProvided.html","",""],["WebSocket::Error::Handshake::UnknownVersion","","WebSocket/Error/Handshake/UnknownVersion.html","",""],["WebSocket::ExceptionHandler","","WebSocket/ExceptionHandler.html","",""],["WebSocket::ExceptionHandler::ClassMethods","","WebSocket/ExceptionHandler/ClassMethods.html","",""],["WebSocket::Frame","","WebSocket/Frame.html","",""],["WebSocket::Frame::Base","","WebSocket/Frame/Base.html","","<p>@abstract Subclass and override to implement custom frames\n"],["WebSocket::Frame::Data","","WebSocket/Frame/Data.html","",""],["WebSocket::Frame::Handler","","WebSocket/Frame/Handler.html","",""],["WebSocket::Frame::Handler::Base","","WebSocket/Frame/Handler/Base.html","",""],["WebSocket::Frame::Handler::Handler03","","WebSocket/Frame/Handler/Handler03.html","",""],["WebSocket::Frame::Handler::Handler04","","WebSocket/Frame/Handler/Handler04.html","",""],["WebSocket::Frame::Handler::Handler05","","WebSocket/Frame/Handler/Handler05.html","",""],["WebSocket::Frame::Handler::Handler07","","WebSocket/Frame/Handler/Handler07.html","",""],["WebSocket::Frame::Handler::Handler75","","WebSocket/Frame/Handler/Handler75.html","",""],["WebSocket::Frame::Incoming","","WebSocket/Frame/Incoming.html","","<p>Construct or parse incoming WebSocket Frame. @note You should NEVER use\nthis class directly - use Client …\n"],["WebSocket::Frame::Incoming::Client","","WebSocket/Frame/Incoming/Client.html","",""],["WebSocket::Frame::Incoming::Server","","WebSocket/Frame/Incoming/Server.html","",""],["WebSocket::Frame::Outgoing","","WebSocket/Frame/Outgoing.html","","<p>Construct or parse incoming WebSocket Frame. @note You should NEVER use\nthis class directly - use Client …\n"],["WebSocket::Frame::Outgoing::Client","","WebSocket/Frame/Outgoing/Client.html","",""],["WebSocket::Frame::Outgoing::Server","","WebSocket/Frame/Outgoing/Server.html","",""],["WebSocket::Handshake","","WebSocket/Handshake.html","",""],["WebSocket::Handshake::Base","","WebSocket/Handshake/Base.html","","<p>@abstract Subclass and override to implement custom handshakes\n"],["WebSocket::Handshake::Client","","WebSocket/Handshake/Client.html","","<p>Construct or parse a client WebSocket handshake.\n<p>@example\n\n<pre>@handshake = WebSocket::Handshake::Client.new(url: ...</pre>\n"],["WebSocket::Handshake::Handler","","WebSocket/Handshake/Handler.html","",""],["WebSocket::Handshake::Handler::Base","","WebSocket/Handshake/Handler/Base.html","","<p>This class and it&#39;s descendants are included in client or server\nhandshake in order to extend basic …\n"],["WebSocket::Handshake::Handler::Client","","WebSocket/Handshake/Handler/Client.html","",""],["WebSocket::Handshake::Handler::Client01","","WebSocket/Handshake/Handler/Client01.html","",""],["WebSocket::Handshake::Handler::Client04","","WebSocket/Handshake/Handler/Client04.html","",""],["WebSocket::Handshake::Handler::Client75","","WebSocket/Handshake/Handler/Client75.html","",""],["WebSocket::Handshake::Handler::Client76","","WebSocket/Handshake/Handler/Client76.html","",""],["WebSocket::Handshake::Handler::Server","","WebSocket/Handshake/Handler/Server.html","",""],["WebSocket::Handshake::Handler::Server04","","WebSocket/Handshake/Handler/Server04.html","",""],["WebSocket::Handshake::Handler::Server75","","WebSocket/Handshake/Handler/Server75.html","",""],["WebSocket::Handshake::Handler::Server76","","WebSocket/Handshake/Handler/Server76.html","",""],["WebSocket::Handshake::Server","","WebSocket/Handshake/Server.html","","<p>Construct or parse a server WebSocket handshake.\n<p>@example\n\n<pre>handshake = WebSocket::Handshake::Server.new ...</pre>\n"],["<<","WebSocket::Frame::Data","WebSocket/Frame/Data.html#method-i-3C-3C","(*args)",""],["<<","WebSocket::Frame::Incoming","WebSocket/Frame/Incoming.html#method-i-3C-3C","(data)","<p>Add provided string as raw incoming frame. @param data [String] Raw frame\n"],["<<","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-3C-3C","(data)","<p>@abstract Add data to handshake\n"],["<<","WebSocket::Handshake::Client","WebSocket/Handshake/Client.html#method-i-3C-3C","(data)","<p>Add text of response from Server. This method will parse content\nimmediately and update state and error(if …\n"],["<<","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-3C-3C","(data)","<p>Add text of request from Client. This method will parse content immediately\nand update version, state …\n"],["accept","WebSocket::Handshake::Handler::Client04","WebSocket/Handshake/Handler/Client04.html#method-i-accept","()","<p>Value of Sec-WebSocket-Accept that should be delivered back by server\n@return [Sering] accept\n"],["challenge","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-challenge","()","<p>Expected challenge that should be sent by server @return [String] challenge\n"],["challenge_response","WebSocket::Handshake::Handler::Server76","WebSocket/Handshake/Handler/Server76.html#method-i-challenge_response","()","<p>Response to client challenge from request Sec-WebSocket-Key1,\nSec-WebSocket-Key2 and leftovers @return …\n"],["control_frame?","WebSocket::Frame::Handler::Base","WebSocket/Frame/Handler/Base.html#method-i-control_frame-3F","(frame_type)","<p>Check if frame is one of control frames @param [Symbol] frame_type Frame\ntype @return [Boolean] True …\n"],["convert_args","WebSocket::Frame::Data","WebSocket/Frame/Data.html#method-i-convert_args","(args)","<p>Convert all arguments to ASCII-8BIT for easier traversing\n"],["data_frame?","WebSocket::Frame::Handler::Base","WebSocket/Frame/Handler/Base.html#method-i-data_frame-3F","(frame_type)","<p>Check if frame is one of data frames @param [Symbol] frame_type Frame type\n@return [Boolean] True if …\n"],["decode_frame","WebSocket::Frame::Handler::Base","WebSocket/Frame/Handler/Base.html#method-i-decode_frame","()","<p>Convert raw data to decoded frame @return [WebSocket::Frame::Incoming]\nFrame if found, nil otherwise …\n"],["decode_frame","WebSocket::Frame::Handler::Handler03","WebSocket/Frame/Handler/Handler03.html#method-i-decode_frame","()","<p>@see WebSocket::Frame::Handler::Base#decode_frame\n"],["decode_frame","WebSocket::Frame::Handler::Handler07","WebSocket/Frame/Handler/Handler07.html#method-i-decode_frame","()",""],["decode_frame","WebSocket::Frame::Handler::Handler75","WebSocket/Frame/Handler/Handler75.html#method-i-decode_frame","()","<p>@see WebSocket::Frame::Handler::Base#decode_frame\n"],["decoded?","WebSocket::Frame::Incoming","WebSocket/Frame/Incoming.html#method-i-decoded-3F","()","<p>If data is still encoded after receiving then this is false. After calling\n“next” you will …\n"],["encode_frame","WebSocket::Frame::Handler::Base","WebSocket/Frame/Handler/Base.html#method-i-encode_frame","()","<p>Convert data to raw frame ready to send to client @return [String] Encoded\nframe\n"],["encode_frame","WebSocket::Frame::Handler::Handler03","WebSocket/Frame/Handler/Handler03.html#method-i-encode_frame","()","<p>@see WebSocket::Frame::Handler::Base#encode_frame\n"],["encode_frame","WebSocket::Frame::Handler::Handler07","WebSocket/Frame/Handler/Handler07.html#method-i-encode_frame","()",""],["encode_frame","WebSocket::Frame::Handler::Handler75","WebSocket/Frame/Handler/Handler75.html#method-i-encode_frame","()","<p>@see WebSocket::Frame::Handler::Base#encode_frame\n"],["error?","WebSocket::Frame::Base","WebSocket/Frame/Base.html#method-i-error-3F","()","<p>Check if some errors occured @return [Boolean] True if error is set\n"],["fin","WebSocket::Frame::Handler::Handler03","WebSocket/Frame/Handler/Handler03.html#method-i-fin","()","<p>This allows flipping the more bit to fin for draft 04\n"],["fin","WebSocket::Frame::Handler::Handler04","WebSocket/Frame/Handler/Handler04.html#method-i-fin","()","<p>The only difference between draft 03 framing and draft 04 framing is that\nthe MORE bit has been changed …\n"],["finished?","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-finished-3F","()","<p>Is parsing of data finished? @return [Boolena] True if request was\ncompletely parsed or error occured. …\n"],["finishing_line","WebSocket::Handshake::Handler::Base","WebSocket/Handshake/Handler/Base.html#method-i-finishing_line","()","<p>Set data to send after headers. In most cases it will be blank data.\n@return [String] data\n"],["finishing_line","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-finishing_line","()","<p>@see WebSocket::Handshake::Handler::Base#finishing_line\n"],["finishing_line","WebSocket::Handshake::Handler::Server76","WebSocket/Handshake/Handler/Server76.html#method-i-finishing_line","()","<p>@see WebSocket::Handshake::Handler::Base#finishing_line\n"],["from_hash","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-from_hash","(hash)","<p>Parse the request from hash @param hash Hash to import data @option hash\n[Hash] :headers HTTP headers …\n"],["from_rack","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-from_rack","(env)","<p>Parse the request from a rack environment @param env Rack Environment\n<p>@example\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@handshake</span>.<span class=\"ruby-identifier\">from_rack</span>(<span class=\"ruby-identifier\">env</span>)\n</pre>\n"],["generate_key","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-generate_key","(key)","<p>Generate Sec-WebSocket-Key1 and Sec-WebSocket-Key2 @param [String] name of\nkey. Will be used to set number …\n"],["generate_key3","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-generate_key3","()","<p>Generate third key\n"],["getbytes","WebSocket::Frame::Data","WebSocket/Frame/Data.html#method-i-getbytes","(start_index, count)","<p>Extract `count` bytes starting from `start_index` and unmask it if needed.\n"],["handshake_keys","WebSocket::Handshake::Handler::Base","WebSocket/Handshake/Handler/Base.html#method-i-handshake_keys","()","<p>Set handshake headers. Provided as array because some protocol version\nrequire specific order of fields. …\n"],["handshake_keys","WebSocket::Handshake::Handler::Client","WebSocket/Handshake/Handler/Client.html#method-i-handshake_keys","()","<p>@see WebSocket::Handshake::Handler::Base#header_handshake_keys\n"],["handshake_keys","WebSocket::Handshake::Handler::Client01","WebSocket/Handshake/Handler/Client01.html#method-i-handshake_keys","()","<p>@see WebSocket::Handshake::Handler::Base#handshake_keys\n"],["handshake_keys","WebSocket::Handshake::Handler::Client04","WebSocket/Handshake/Handler/Client04.html#method-i-handshake_keys","()","<p>@see WebSocket::Handshake::Handler::Base#handshake_keys\n"],["handshake_keys","WebSocket::Handshake::Handler::Client75","WebSocket/Handshake/Handler/Client75.html#method-i-handshake_keys","()","<p>@see WebSocket::Handshake::Handler::Base#handshake_keys\n"],["handshake_keys","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-handshake_keys","()","<p>@see WebSocket::Handshake::Handler::Base#handshake_keys\n"],["handshake_keys","WebSocket::Handshake::Handler::Server04","WebSocket/Handshake/Handler/Server04.html#method-i-handshake_keys","()","<p>@see WebSocket::Handshake::Handler::Base#handshake_keys\n"],["handshake_keys","WebSocket::Handshake::Handler::Server75","WebSocket/Handshake/Handler/Server75.html#method-i-handshake_keys","()","<p>@see WebSocket::Handshake::Handler::Base#handshake_keys\n"],["handshake_keys","WebSocket::Handshake::Handler::Server76","WebSocket/Handshake/Handler/Server76.html#method-i-handshake_keys","()","<p>@see WebSocket::Handshake::Handler::Base#handshake_keys\n"],["has_close_code?","WebSocket::Frame::Handler::Handler07","WebSocket/Frame/Handler/Handler07.html#method-i-has_close_code-3F","(frame)",""],["header_line","WebSocket::Handshake::Handler::Base","WebSocket/Handshake/Handler/Base.html#method-i-header_line","()","<p>Set first line of text representation according to specification. @return\n[String] First line of HTTP …\n"],["header_line","WebSocket::Handshake::Handler::Client","WebSocket/Handshake/Handler/Client.html#method-i-header_line","()","<p>@see WebSocket::Handshake::Handler::Base#header_line\n"],["header_line","WebSocket::Handshake::Handler::Server04","WebSocket/Handshake/Handler/Server04.html#method-i-header_line","()","<p>@see WebSocket::Handshake::Handler::Base#header_line\n"],["header_line","WebSocket::Handshake::Handler::Server75","WebSocket/Handshake/Handler/Server75.html#method-i-header_line","()","<p>@see WebSocket::Handshake::Handler::Base#header_line\n"],["header_line","WebSocket::Handshake::Handler::Server76","WebSocket/Handshake/Handler/Server76.html#method-i-header_line","()","<p>@see WebSocket::Handshake::Handler::Base#header_line\n"],["host","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-host","()","<p>Host of server according to client header @return [String] host\n"],["include_version","WebSocket::Frame::Base","WebSocket/Frame/Base.html#method-i-include_version","()","<p>Include set of methods for selected protocol version @return [Boolean]\nfalse if protocol number is unknown, …\n"],["include_version","WebSocket::Handshake::Client","WebSocket/Handshake/Client.html#method-i-include_version","()","<p>Include set of methods for selected protocol version @return [Boolean]\nfalse if protocol number is unknown, …\n"],["include_version","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-include_version","()","<p>Include set of methods for selected protocol version @return [Boolean]\nfalse if protocol number is unknown, …\n"],["included","WebSocket::ExceptionHandler","WebSocket/ExceptionHandler.html#method-c-included","(base)",""],["incoming_masking?","WebSocket::Frame::Incoming::Client","WebSocket/Frame/Incoming/Client.html#method-i-incoming_masking-3F","()",""],["incoming_masking?","WebSocket::Frame::Incoming::Server","WebSocket/Frame/Incoming/Server.html#method-i-incoming_masking-3F","()",""],["incoming_masking?","WebSocket::Frame::Outgoing::Client","WebSocket/Frame/Outgoing/Client.html#method-i-incoming_masking-3F","()",""],["incoming_masking?","WebSocket::Frame::Outgoing::Server","WebSocket/Frame/Outgoing/Server.html#method-i-incoming_masking-3F","()",""],["inspect","WebSocket::Frame::Base","WebSocket/Frame/Base.html#method-i-inspect","()","<p>Recreate inspect as #to_s was overwritten\n"],["inspect","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-inspect","()","<p>Recreate inspect as #to_s was overwritten\n"],["key","WebSocket::Handshake::Handler::Client04","WebSocket/Handshake/Handler/Client04.html#method-i-key","()","<p>Sec-WebSocket-Key value @return [String] key\n"],["key","WebSocket::Handshake::Handler::Server04","WebSocket/Handshake/Handler/Server04.html#method-i-key","()",""],["key1","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-key1","()","<p>Sec-WebSocket-Key1 value @return [String] key\n"],["key2","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-key2","()","<p>Sec-WebSocket-Key2 value @return [String] key\n"],["key3","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-key3","()","<p>Value of third key, sent in body @return [String] key\n"],["leftovers","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-leftovers","()","<p>Data left from parsing. Sometimes data that doesn&#39;t belong to handshake\nare added - use this method …\n"],["mask","WebSocket::Frame::Data","WebSocket/Frame/Data.html#method-i-mask","(payload, mask)","<p>Mask whole payload using mask key\n"],["masking?","WebSocket::Frame::Handler::Handler03","WebSocket/Frame/Handler/Handler03.html#method-i-masking-3F","()","<p>Allow turning on or off masking\n"],["masking?","WebSocket::Frame::Handler::Handler05","WebSocket/Frame/Handler/Handler05.html#method-i-masking-3F","()","<p>Since handler 5 masking should be enabled by default\n"],["max_frame_size","WebSocket","WebSocket.html#method-c-max_frame_size","()","<p>Limit of frame size payload in bytes\n"],["max_frame_size=","WebSocket","WebSocket.html#method-c-max_frame_size-3D","(val)","<p>Set limit of frame size payload in bytes\n"],["message","WebSocket::Error::Frame::ControlFramePayloadTooLong","WebSocket/Error/Frame/ControlFramePayloadTooLong.html#method-i-message","()",""],["message","WebSocket::Error::Frame::DataFrameInsteadContinuation","WebSocket/Error/Frame/DataFrameInsteadContinuation.html#method-i-message","()",""],["message","WebSocket::Error::Frame::FragmentedControlFrame","WebSocket/Error/Frame/FragmentedControlFrame.html#method-i-message","()",""],["message","WebSocket::Error::Frame::Invalid","WebSocket/Error/Frame/Invalid.html#method-i-message","()",""],["message","WebSocket::Error::Frame::InvalidPayloadEncoding","WebSocket/Error/Frame/InvalidPayloadEncoding.html#method-i-message","()",""],["message","WebSocket::Error::Frame::MaskTooShort","WebSocket/Error/Frame/MaskTooShort.html#method-i-message","()",""],["message","WebSocket::Error::Frame::ReservedBitUsed","WebSocket/Error/Frame/ReservedBitUsed.html#method-i-message","()",""],["message","WebSocket::Error::Frame::TooLong","WebSocket/Error/Frame/TooLong.html#method-i-message","()",""],["message","WebSocket::Error::Frame::UnexpectedContinuationFrame","WebSocket/Error/Frame/UnexpectedContinuationFrame.html#method-i-message","()",""],["message","WebSocket::Error::Frame::UnknownCloseCode","WebSocket/Error/Frame/UnknownCloseCode.html#method-i-message","()",""],["message","WebSocket::Error::Frame::UnknownFrameType","WebSocket/Error/Frame/UnknownFrameType.html#method-i-message","()",""],["message","WebSocket::Error::Frame::UnknownOpcode","WebSocket/Error/Frame/UnknownOpcode.html#method-i-message","()",""],["message","WebSocket::Error::Frame::UnknownVersion","WebSocket/Error/Frame/UnknownVersion.html#method-i-message","()",""],["message","WebSocket::Error::Handshake::GetRequestRequired","WebSocket/Error/Handshake/GetRequestRequired.html#method-i-message","()",""],["message","WebSocket::Error::Handshake::InvalidAuthentication","WebSocket/Error/Handshake/InvalidAuthentication.html#method-i-message","()",""],["message","WebSocket::Error::Handshake::InvalidHeader","WebSocket/Error/Handshake/InvalidHeader.html#method-i-message","()",""],["message","WebSocket::Error::Handshake::InvalidStatusCode","WebSocket/Error/Handshake/InvalidStatusCode.html#method-i-message","()",""],["message","WebSocket::Error::Handshake::NoHostProvided","WebSocket/Error/Handshake/NoHostProvided.html#method-i-message","()",""],["message","WebSocket::Error::Handshake::UnknownVersion","WebSocket/Error/Handshake/UnknownVersion.html#method-i-message","()",""],["new","WebSocket::Frame::Base","WebSocket/Frame/Base.html#method-c-new","(args = {})","<p>Initialize frame @param args [Hash] Arguments for frame @option args\n[String]  :data default data for …\n"],["new","WebSocket::Frame::Data","WebSocket/Frame/Data.html#method-c-new","(*args)",""],["new","WebSocket::Frame::Handler::Base","WebSocket/Frame/Handler/Base.html#method-c-new","(frame)",""],["new","WebSocket::Frame::Incoming","WebSocket/Frame/Incoming.html#method-c-new","(args = {})",""],["new","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-c-new","(args = {})","<p>Initialize new WebSocket Handshake and set it&#39;s state to :new\n"],["new","WebSocket::Handshake::Client","WebSocket/Handshake/Client.html#method-c-new","(args = {})","<p>Initialize new WebSocket Client\n<p>@param [Hash] args Arguments for client\n<p>@option args [String]  :host Host …\n"],["new","WebSocket::Handshake::Handler::Base","WebSocket/Handshake/Handler/Base.html#method-c-new","(handshake)",""],["new","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-c-new","(args = {})","<p>Initialize new WebSocket Server\n<p>@param [Hash] args Arguments for server\n<p>@option args [Boolean] :secure …\n"],["next","WebSocket::Frame::Incoming","WebSocket/Frame/Incoming.html#method-i-next","()","<p>Return next complete frame. This function will merge together splitted\nframes and return as combined …\n"],["numbers_over_spaces","WebSocket::Handshake::Handler::Server76","WebSocket/Handshake/Handler/Server76.html#method-i-numbers_over_spaces","(string)","<p>Calculate numbers over spaces, according to spec 5.2 @param [String] string\nKey to parse @return [Integer] …\n"],["opcode_to_type","WebSocket::Frame::Handler::Handler03","WebSocket/Frame/Handler/Handler03.html#method-i-opcode_to_type","(opcode)","<p>Convert frame opcode to type name @param [Integer] opcode Opcode @return\n[Symbol] Frame type name or …\n"],["opcode_to_type","WebSocket::Frame::Handler::Handler07","WebSocket/Frame/Handler/Handler07.html#method-i-opcode_to_type","(opcode)","<p>Convert frame opcode to type name @param [Integer] opcode Opcode @return\n[Symbol] Frame type name or …\n"],["outgoing_masking?","WebSocket::Frame::Incoming::Client","WebSocket/Frame/Incoming/Client.html#method-i-outgoing_masking-3F","()",""],["outgoing_masking?","WebSocket::Frame::Incoming::Server","WebSocket/Frame/Incoming/Server.html#method-i-outgoing_masking-3F","()",""],["outgoing_masking?","WebSocket::Frame::Outgoing::Client","WebSocket/Frame/Outgoing/Client.html#method-i-outgoing_masking-3F","()",""],["outgoing_masking?","WebSocket::Frame::Outgoing::Server","WebSocket/Frame/Outgoing/Server.html#method-i-outgoing_masking-3F","()",""],["parse_data","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-parse_data","()","<p>Parse data imported to handshake and sets state to finished if necessary.\n@return [Boolean] True if finished …\n"],["parse_first_line","WebSocket::Handshake::Client","WebSocket/Handshake/Client.html#method-i-parse_first_line","(line)","<p>Parse first line of Server response. @param [String] line Line to parse\n@return [Boolean] True if parsed …\n"],["parse_first_line","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-parse_first_line","(line)","<p>Parse first line of Client response. @param [String] line Line to parse\n@return [Boolean] True if parsed …\n"],["port","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-port","()","<p>Port of server according to client header @return [String] port\n"],["require_sending?","WebSocket::Frame::Outgoing","WebSocket/Frame/Outgoing.html#method-i-require_sending-3F","()","<p>Should current frame be sent? Exclude empty frames etc. @return [Boolean]\ntrue if frame should be sent …\n"],["rescue_method","WebSocket::ExceptionHandler::ClassMethods","WebSocket/ExceptionHandler/ClassMethods.html#method-i-rescue_method","(method_name, options = {})","<p>Rescue from WebSocket::Error errors.\n<p>@param [String] method_name Name of method that should be wrapped …\n"],["reserved_leftover_lines","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-reserved_leftover_lines","()","<p>Number of lines after header that should be handled as belonging to\nhandshake. Any data after those lines …\n"],["reserved_leftover_lines","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-reserved_leftover_lines","()","<p>@see WebSocket::Handshake::Base#reserved_leftover_lines\n"],["reserved_leftover_lines","WebSocket::Handshake::Handler::Server76","WebSocket/Handshake/Handler/Server76.html#method-i-reserved_leftover_lines","()","<p>@see WebSocket::Handshake::Base#reserved_leftover_lines\n"],["set_error","WebSocket::ExceptionHandler","WebSocket/ExceptionHandler.html#method-i-set_error","(message)","<p>Changes state to error and sets error message @param [String] message Error\nmessage to set\n"],["set_error","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-set_error","(message)","<p>Changes state to error and sets error message @param [String] message Error\nmessage to set\n"],["set_mask","WebSocket::Frame::Data","WebSocket/Frame/Data.html#method-i-set_mask","()","<p>Extract mask from 4 first bytes according to spec\n"],["set_version","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-set_version","()","<p>Set version of protocol basing on client requets. AFter cotting method\ncalls include_version.\n"],["should_raise","WebSocket","WebSocket.html#method-c-should_raise","()","<p>If set to true error will be raised instead of setting `error` method. All\nerrors inherit from WebSocket::Error …\n"],["should_raise=","WebSocket","WebSocket.html#method-c-should_raise-3D","(val)","<p>Should protocol errors raise ruby errors? If false then `error` flag is set\ninstead.\n"],["should_respond?","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-should_respond-3F","()","<p>@abstract Should send data after parsing is finished?\n"],["should_respond?","WebSocket::Handshake::Client","WebSocket/Handshake/Client.html#method-i-should_respond-3F","()","<p>Should send content to server after finished parsing? @return [Boolean]\nfalse\n"],["should_respond?","WebSocket::Handshake::Server","WebSocket/Handshake/Server.html#method-i-should_respond-3F","()","<p>Should send content to client after finished parsing? @return [Boolean]\ntrue\n"],["signature","WebSocket::Handshake::Handler::Server04","WebSocket/Handshake/Handler/Server04.html#method-i-signature","()","<p>Signature of response, created from client request Sec-WebSocket-Key\n@return [String] signature\n"],["support_type?","WebSocket::Frame::Base","WebSocket/Frame/Base.html#method-i-support_type-3F","()","<p>Is selected type supported for selected handler?\n"],["supported?","WebSocket::Frame::Outgoing","WebSocket/Frame/Outgoing.html#method-i-supported-3F","()","<p>Is selected type supported by current draft version? @return [Boolean] true\nif frame type is supported …\n"],["supported_frames","WebSocket::Frame::Base","WebSocket/Frame/Base.html#method-i-supported_frames","()","<p>Implement in submodules\n"],["supported_frames","WebSocket::Frame::Handler::Handler03","WebSocket/Frame/Handler/Handler03.html#method-i-supported_frames","()","<p>@see WebSocket::Frame::Base#supported_frames\n"],["supported_frames","WebSocket::Frame::Handler::Handler75","WebSocket/Frame/Handler/Handler75.html#method-i-supported_frames","()","<p>@see WebSocket::Frame::Base#supported_frames\n"],["to_s","WebSocket::Frame::Incoming","WebSocket/Frame/Incoming.html#method-i-to_s","()","<p>If decoded then this will return frame content. Otherwise it will return\nraw frame. @return [String] …\n"],["to_s","WebSocket::Frame::Outgoing","WebSocket/Frame/Outgoing.html#method-i-to_s","()","<p>Return raw frame formatted for sending.\n"],["to_s","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-to_s","()","<p>Return textual representation of handshake request or response @return\n[String] text of response\n"],["to_s","WebSocket::Handshake::Handler::Base","WebSocket/Handshake/Handler/Base.html#method-i-to_s","()","<p>@see WebSocket::Handshake::Base#to_s\n"],["type_to_opcode","WebSocket::Frame::Handler::Handler03","WebSocket/Frame/Handler/Handler03.html#method-i-type_to_opcode","(frame_type)","<p>Convert frame type name to opcode @param [Symbol] frame_type Frame type\nname @return [Integer] opcode …\n"],["type_to_opcode","WebSocket::Frame::Handler::Handler07","WebSocket/Frame/Handler/Handler07.html#method-i-type_to_opcode","(frame_type)","<p>Convert frame type name to opcode @param [Symbol] frame_type Frame type\nname @return [Integer] opcode …\n"],["unset_mask","WebSocket::Frame::Data","WebSocket/Frame/Data.html#method-i-unset_mask","()","<p>Remove mask flag - it will still be present in payload\n"],["uri","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-uri","()","<p>URI of request. @return [String] Full URI with protocol @example\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@handshake</span>.<span class=\"ruby-identifier\">uri</span> <span class=\"ruby-comment\">#=&gt; &quot;ws://example.com/path?query=true&quot;</span>\n</pre>\n"],["valid?","WebSocket::Handshake::Base","WebSocket/Handshake/Base.html#method-i-valid-3F","()","<p>Is parsed data valid? @return [Boolean] False if some errors occured.\nReason for error could be found …\n"],["valid?","WebSocket::Handshake::Handler::Base","WebSocket/Handshake/Handler/Base.html#method-i-valid-3F","()",""],["valid?","WebSocket::Handshake::Handler::Client04","WebSocket/Handshake/Handler/Client04.html#method-i-valid-3F","()","<p>@see WebSocket::Handshake::Base#valid?\n"],["valid?","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-valid-3F","()","<p>@see WebSocket::Handshake::Base#valid?\n"],["valid?","WebSocket::Handshake::Handler::Server04","WebSocket/Handshake/Handler/Server04.html#method-i-valid-3F","()","<p>@see WebSocket::Handshake::Base#valid?\n"],["valid?","WebSocket::Handshake::Handler::Server76","WebSocket/Handshake/Handler/Server76.html#method-i-valid-3F","()","<p>@see WebSocket::Handshake::Base#valid?\n"],["valid_code?","WebSocket::Frame::Handler::Handler07","WebSocket/Frame/Handler/Handler07.html#method-i-valid_code-3F","(code)",""],["valid_encoding?","WebSocket::Frame::Handler::Handler07","WebSocket/Frame/Handler/Handler07.html#method-i-valid_encoding-3F","(data)",""],["verify_accept","WebSocket::Handshake::Handler::Client04","WebSocket/Handshake/Handler/Client04.html#method-i-verify_accept","()","<p>Verify if received header Sec-WebSocket-Accept matches generated one.\n@return [Boolean] True if accept …\n"],["verify_challenge","WebSocket::Handshake::Handler::Client76","WebSocket/Handshake/Handler/Client76.html#method-i-verify_challenge","()","<p>Verify if challenge sent by server match generated one @return [Boolena]\nTrue if challenge matches, false …\n"],["verify_key","WebSocket::Handshake::Handler::Server04","WebSocket/Handshake/Handler/Server04.html#method-i-verify_key","()",""]]}}