var search_data = {"index":{"searchIndex":["actionmailer","base","lateattachmentsproxy","nullmail","collector","deliveryjob","deliverymethods","classmethods","mail","logsubscriber","mailhelper","messagedelivery","noninferrablemailererror","preview","previews","classmethods","railtie","activesupport","testcase","behavior","classmethods","testhelper","version","applicationmailer","rails","generators","mailergenerator","[]=()","_raise_error()","add_delivery_method()","all()","all()","any()","assert_emails()","assert_no_emails()","attachments()","attachments()","block_format()","call()","charset()","controller_path()","create_mailer_file()","custom()","default()","default_i18n_subject()","default_options=()","deliver()","deliver_later()","deliver_later!()","deliver_now()","deliver_now!()","determine_default_mailer()","email_exists?()","emails()","encode()","enqueue_delivery()","exists?()","find()","format_paragraph()","gem_version()","headers()","initialize_test_deliveries()","inline()","logger()","mail()","mailer()","mailer_class()","mailer_name()","mailer_name()","message()","message()","new()","new()","new()","preview_name()","process()","read_fixture()","receive()","receive()","register_interceptor()","register_interceptors()","register_observer()","register_observers()","register_preview_interceptor()","register_preview_interceptors()","restore_delivery_method()","restore_test_deliveries()","set_content_type()","set_delivery_method()","set_expected_mail()","supports_path?()","tests()","version()","usage"],"longSearchIndex":["actionmailer","actionmailer::base","actionmailer::base::lateattachmentsproxy","actionmailer::base::nullmail","actionmailer::collector","actionmailer::deliveryjob","actionmailer::deliverymethods","actionmailer::deliverymethods::classmethods","actionmailer::deliverymethods::mail","actionmailer::logsubscriber","actionmailer::mailhelper","actionmailer::messagedelivery","actionmailer::noninferrablemailererror","actionmailer::preview","actionmailer::previews","actionmailer::previews::classmethods","actionmailer::railtie","actionmailer::railtie::activesupport","actionmailer::testcase","actionmailer::testcase::behavior","actionmailer::testcase::behavior::classmethods","actionmailer::testhelper","actionmailer::version","applicationmailer","rails","rails::generators","rails::generators::mailergenerator","actionmailer::base::lateattachmentsproxy#[]=()","actionmailer::base::lateattachmentsproxy#_raise_error()","actionmailer::deliverymethods::classmethods#add_delivery_method()","actionmailer::collector#all()","actionmailer::preview::all()","actionmailer::collector#any()","actionmailer::testhelper#assert_emails()","actionmailer::testhelper#assert_no_emails()","actionmailer::base#attachments()","actionmailer::mailhelper#attachments()","actionmailer::mailhelper#block_format()","actionmailer::preview::call()","actionmailer::testcase::behavior#charset()","actionmailer::base::controller_path()","rails::generators::mailergenerator#create_mailer_file()","actionmailer::collector#custom()","actionmailer::base::default()","actionmailer::base#default_i18n_subject()","actionmailer::base::default_options=()","actionmailer::logsubscriber#deliver()","actionmailer::messagedelivery#deliver_later()","actionmailer::messagedelivery#deliver_later!()","actionmailer::messagedelivery#deliver_now()","actionmailer::messagedelivery#deliver_now!()","actionmailer::testcase::behavior::classmethods#determine_default_mailer()","actionmailer::preview::email_exists?()","actionmailer::preview::emails()","actionmailer::testcase::behavior#encode()","actionmailer::messagedelivery#enqueue_delivery()","actionmailer::preview::exists?()","actionmailer::preview::find()","actionmailer::mailhelper#format_paragraph()","actionmailer::gem_version()","actionmailer::base#headers()","actionmailer::testcase::behavior#initialize_test_deliveries()","actionmailer::base::lateattachmentsproxy#inline()","actionmailer::logsubscriber#logger()","actionmailer::base#mail()","actionmailer::mailhelper#mailer()","actionmailer::testcase::behavior::classmethods#mailer_class()","actionmailer::base#mailer_name()","actionmailer::base::mailer_name()","actionmailer::mailhelper#message()","actionmailer::messagedelivery#message()","actionmailer::base::new()","actionmailer::collector::new()","actionmailer::noninferrablemailererror::new()","actionmailer::preview::preview_name()","actionmailer::logsubscriber#process()","actionmailer::testcase::behavior#read_fixture()","actionmailer::base::receive()","actionmailer::logsubscriber#receive()","actionmailer::base::register_interceptor()","actionmailer::base::register_interceptors()","actionmailer::base::register_observer()","actionmailer::base::register_observers()","actionmailer::previews::classmethods#register_preview_interceptor()","actionmailer::previews::classmethods#register_preview_interceptors()","actionmailer::testcase::behavior#restore_delivery_method()","actionmailer::testcase::behavior#restore_test_deliveries()","actionmailer::base#set_content_type()","actionmailer::testcase::behavior#set_delivery_method()","actionmailer::testcase::behavior#set_expected_mail()","actionmailer::base::supports_path?()","actionmailer::testcase::behavior::classmethods#tests()","actionmailer::version()",""],"info":[["ActionMailer","","ActionMailer.html","",""],["ActionMailer::Base","","ActionMailer/Base.html","","<p>Action Mailer allows you to send email from your application using a mailer\nmodel and views.\n<p>Mailer Models …\n"],["ActionMailer::Base::LateAttachmentsProxy","","ActionMailer/Base/LateAttachmentsProxy.html","",""],["ActionMailer::Base::NullMail","","ActionMailer/Base/NullMail.html","",""],["ActionMailer::Collector","","ActionMailer/Collector.html","",""],["ActionMailer::DeliveryJob","","ActionMailer/DeliveryJob.html","",""],["ActionMailer::DeliveryMethods","","ActionMailer/DeliveryMethods.html","","<p>This module handles everything related to mail delivery, from registering\nnew delivery methods to configuring …\n"],["ActionMailer::DeliveryMethods::ClassMethods","","ActionMailer/DeliveryMethods/ClassMethods.html","","<p>Helpers for creating and wrapping delivery behavior, used by\nDeliveryMethods.\n"],["ActionMailer::DeliveryMethods::Mail","","ActionMailer/DeliveryMethods/Mail.html","",""],["ActionMailer::LogSubscriber","","ActionMailer/LogSubscriber.html","","<p>Implements the ActiveSupport::LogSubscriber for logging notifications when\nemail is delivered and received. …\n"],["ActionMailer::MailHelper","","ActionMailer/MailHelper.html","","<p>Provides helper methods for ActionMailer::Base that can be used for easily\nformatting messages, accessing …\n"],["ActionMailer::MessageDelivery","","ActionMailer/MessageDelivery.html","","<p>The <code>ActionMailer::MessageDelivery</code> class is used by\n<code>ActionMailer::Base</code> when creating a new mailer.\n<code>MessageDelivery</code> …\n"],["ActionMailer::NonInferrableMailerError","","ActionMailer/NonInferrableMailerError.html","",""],["ActionMailer::Preview","","ActionMailer/Preview.html","",""],["ActionMailer::Previews","","ActionMailer/Previews.html","",""],["ActionMailer::Previews::ClassMethods","","ActionMailer/Previews/ClassMethods.html","",""],["ActionMailer::Railtie","","ActionMailer/Railtie.html","",""],["ActionMailer::Railtie::ActiveSupport","","ActionMailer/Railtie/ActiveSupport.html","",""],["ActionMailer::TestCase","","ActionMailer/TestCase.html","",""],["ActionMailer::TestCase::Behavior","","ActionMailer/TestCase/Behavior.html","",""],["ActionMailer::TestCase::Behavior::ClassMethods","","ActionMailer/TestCase/Behavior/ClassMethods.html","",""],["ActionMailer::TestHelper","","ActionMailer/TestHelper.html","","<p>Provides helper methods for testing Action Mailer, including #assert_emails\nand #assert_no_emails\n"],["ActionMailer::VERSION","","ActionMailer/VERSION.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["Rails","","Rails.html","",""],["Rails::Generators","","Rails/Generators.html","",""],["Rails::Generators::MailerGenerator","","Rails/Generators/MailerGenerator.html","",""],["[]=","ActionMailer::Base::LateAttachmentsProxy","ActionMailer/Base/LateAttachmentsProxy.html#method-i-5B-5D-3D","(_name, _content)",""],["_raise_error","ActionMailer::Base::LateAttachmentsProxy","ActionMailer/Base/LateAttachmentsProxy.html#method-i-_raise_error","()",""],["add_delivery_method","ActionMailer::DeliveryMethods::ClassMethods","ActionMailer/DeliveryMethods/ClassMethods.html#method-i-add_delivery_method","(symbol, klass, default_options={})","<p>Adds a new delivery method through the given class using the given symbol\nas alias and the default options …\n"],["all","ActionMailer::Collector","ActionMailer/Collector.html#method-i-all","(*args, &block)",""],["all","ActionMailer::Preview","ActionMailer/Preview.html#method-c-all","()","<p>Returns all mailer preview classes\n"],["any","ActionMailer::Collector","ActionMailer/Collector.html#method-i-any","(*args, &block)",""],["assert_emails","ActionMailer::TestHelper","ActionMailer/TestHelper.html#method-i-assert_emails","(number)","<p>Asserts that the number of emails sent matches the given number.\n\n<pre>def test_emails\n  assert_emails 0\n  ContactMailer.welcome.deliver_now ...</pre>\n"],["assert_no_emails","ActionMailer::TestHelper","ActionMailer/TestHelper.html#method-i-assert_no_emails","(&block)","<p>Assert that no emails have been sent.\n\n<pre>def test_emails\n  assert_no_emails\n  ContactMailer.welcome.deliver_now ...</pre>\n"],["attachments","ActionMailer::Base","ActionMailer/Base.html#method-i-attachments","()","<p>Allows you to add attachments to an email, like so:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">mail</span>.<span class=\"ruby-identifier\">attachments</span>[<span class=\"ruby-string\">&#39;filename.jpg&#39;</span>] = <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">read</span>(<span class=\"ruby-string\">&#39;/path/to/filename.jpg&#39;</span>)\n</pre>\n"],["attachments","ActionMailer::MailHelper","ActionMailer/MailHelper.html#method-i-attachments","()","<p>Access the message attachments list.\n"],["block_format","ActionMailer::MailHelper","ActionMailer/MailHelper.html#method-i-block_format","(text)","<p>Take the text and format it, indented two spaces for each line, and wrapped\nat 72 columns.\n"],["call","ActionMailer::Preview","ActionMailer/Preview.html#method-c-call","(email)","<p>Returns the mail object for the given email name. The registered preview\ninterceptors will be informed …\n"],["charset","ActionMailer::TestCase::Behavior","ActionMailer/TestCase/Behavior.html#method-i-charset","()",""],["controller_path","ActionMailer::Base","ActionMailer/Base.html#method-c-controller_path","()",""],["create_mailer_file","Rails::Generators::MailerGenerator","Rails/Generators/MailerGenerator.html#method-i-create_mailer_file","()",""],["custom","ActionMailer::Collector","ActionMailer/Collector.html#method-i-custom","(mime, options = {})",""],["default","ActionMailer::Base","ActionMailer/Base.html#method-c-default","(value = nil)","<p>Sets the defaults through app configuration:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">config</span>.<span class=\"ruby-identifier\">action_mailer</span>.<span class=\"ruby-identifier\">default</span>(<span class=\"ruby-identifier\">from</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-string\">&quot;no-reply@example.org&quot;</span>)\n</pre>\n"],["default_i18n_subject","ActionMailer::Base","ActionMailer/Base.html#method-i-default_i18n_subject","(interpolations = {})","<p>Translates the <code>subject</code> using Rails I18n class under\n<code>[mailer_scope, action_name]</code> scope. If it does not …\n"],["default_options=","ActionMailer::Base","ActionMailer/Base.html#method-c-default_options-3D","(value = nil)","<p>Allows to set defaults through app configuration:\n\n<pre>config.action_mailer.default_options = { from: &quot;no-reply@example.org&quot; ...</pre>\n"],["deliver","ActionMailer::LogSubscriber","ActionMailer/LogSubscriber.html#method-i-deliver","(event)","<p>An email was delivered.\n"],["deliver_later","ActionMailer::MessageDelivery","ActionMailer/MessageDelivery.html#method-i-deliver_later","(options={})","<p>Enqueues the email to be delivered through Active Job. When the job runs it\nwill send the email using …\n"],["deliver_later!","ActionMailer::MessageDelivery","ActionMailer/MessageDelivery.html#method-i-deliver_later-21","(options={})","<p>Enqueues the email to be delivered through Active Job. When the job runs it\nwill send the email using …\n"],["deliver_now","ActionMailer::MessageDelivery","ActionMailer/MessageDelivery.html#method-i-deliver_now","()","<p>Delivers an email:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Notifier</span>.<span class=\"ruby-identifier\">welcome</span>(<span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">first</span>).<span class=\"ruby-identifier\">deliver_now</span>\n</pre>\n"],["deliver_now!","ActionMailer::MessageDelivery","ActionMailer/MessageDelivery.html#method-i-deliver_now-21","()","<p>Delivers an email without checking <code>perform_deliveries</code> and\n<code>raise_delivery_errors</code>, so use with caution. …\n"],["determine_default_mailer","ActionMailer::TestCase::Behavior::ClassMethods","ActionMailer/TestCase/Behavior/ClassMethods.html#method-i-determine_default_mailer","(name)",""],["email_exists?","ActionMailer::Preview","ActionMailer/Preview.html#method-c-email_exists-3F","(email)","<p>Returns true if the email exists\n"],["emails","ActionMailer::Preview","ActionMailer/Preview.html#method-c-emails","()","<p>Returns all of the available email previews\n"],["encode","ActionMailer::TestCase::Behavior","ActionMailer/TestCase/Behavior.html#method-i-encode","(subject)",""],["enqueue_delivery","ActionMailer::MessageDelivery","ActionMailer/MessageDelivery.html#method-i-enqueue_delivery","(delivery_method, options={})",""],["exists?","ActionMailer::Preview","ActionMailer/Preview.html#method-c-exists-3F","(preview)","<p>Returns true if the preview exists\n"],["find","ActionMailer::Preview","ActionMailer/Preview.html#method-c-find","(preview)","<p>Find a mailer preview by its underscored class name\n"],["format_paragraph","ActionMailer::MailHelper","ActionMailer/MailHelper.html#method-i-format_paragraph","(text, len = 72, indent = 2)","<p>Returns <code>text</code> wrapped at <code>len</code> columns and indented\n<code>indent</code> spaces.\n\n<pre>my_text = &#39;Here is a sample text with ...</pre>\n"],["gem_version","ActionMailer","ActionMailer.html#method-c-gem_version","()","<p>Returns the version of the currently loaded Action Mailer as a\n<code>Gem::Version</code>\n"],["headers","ActionMailer::Base","ActionMailer/Base.html#method-i-headers","(args = nil)","<p>Allows you to pass random and unusual headers to the new\n<code>Mail::Message</code> object which will add them to …\n"],["initialize_test_deliveries","ActionMailer::TestCase::Behavior","ActionMailer/TestCase/Behavior.html#method-i-initialize_test_deliveries","()",""],["inline","ActionMailer::Base::LateAttachmentsProxy","ActionMailer/Base/LateAttachmentsProxy.html#method-i-inline","()",""],["logger","ActionMailer::LogSubscriber","ActionMailer/LogSubscriber.html#method-i-logger","()","<p>Use the logger configured for ActionMailer::Base\n"],["mail","ActionMailer::Base","ActionMailer/Base.html#method-i-mail","(headers = {}, &block)","<p>The main method that creates the message and renders the email templates.\nThere are two ways to call …\n"],["mailer","ActionMailer::MailHelper","ActionMailer/MailHelper.html#method-i-mailer","()","<p>Access the mailer instance.\n"],["mailer_class","ActionMailer::TestCase::Behavior::ClassMethods","ActionMailer/TestCase/Behavior/ClassMethods.html#method-i-mailer_class","()",""],["mailer_name","ActionMailer::Base","ActionMailer/Base.html#method-i-mailer_name","()","<p>Returns the name of the mailer object.\n"],["mailer_name","ActionMailer::Base","ActionMailer/Base.html#method-c-mailer_name","()","<p>Returns the name of current mailer. This method is also being used as a\npath for a view lookup. If this …\n"],["message","ActionMailer::MailHelper","ActionMailer/MailHelper.html#method-i-message","()","<p>Access the message instance.\n"],["message","ActionMailer::MessageDelivery","ActionMailer/MessageDelivery.html#method-i-message","()","<p>Returns the Mail::Message object\n"],["new","ActionMailer::Base","ActionMailer/Base.html#method-c-new","(method_name=nil, *args)","<p>Instantiate a new mailer object. If <code>method_name</code> is not\n<code>nil</code>, the mailer will be initialized according …\n"],["new","ActionMailer::Collector","ActionMailer/Collector.html#method-c-new","(context, &block)",""],["new","ActionMailer::NonInferrableMailerError","ActionMailer/NonInferrableMailerError.html#method-c-new","(name)",""],["preview_name","ActionMailer::Preview","ActionMailer/Preview.html#method-c-preview_name","()","<p>Returns the underscored name of the mailer preview without the suffix\n"],["process","ActionMailer::LogSubscriber","ActionMailer/LogSubscriber.html#method-i-process","(event)","<p>An email was generated.\n"],["read_fixture","ActionMailer::TestCase::Behavior","ActionMailer/TestCase/Behavior.html#method-i-read_fixture","(action)",""],["receive","ActionMailer::Base","ActionMailer/Base.html#method-c-receive","(raw_mail)","<p>Receives a raw email, parses it into an email object, decodes it,\ninstantiates a new mailer, and passes …\n"],["receive","ActionMailer::LogSubscriber","ActionMailer/LogSubscriber.html#method-i-receive","(event)","<p>An email was received.\n"],["register_interceptor","ActionMailer::Base","ActionMailer/Base.html#method-c-register_interceptor","(interceptor)","<p>Register an Interceptor which will be called before mail is sent. Either a\nclass, string or symbol can …\n"],["register_interceptors","ActionMailer::Base","ActionMailer/Base.html#method-c-register_interceptors","(*interceptors)","<p>Register one or more Interceptors which will be called before mail is sent.\n"],["register_observer","ActionMailer::Base","ActionMailer/Base.html#method-c-register_observer","(observer)","<p>Register an Observer which will be notified when mail is delivered. Either\na class, string or symbol …\n"],["register_observers","ActionMailer::Base","ActionMailer/Base.html#method-c-register_observers","(*observers)","<p>Register one or more Observers which will be notified when mail is\ndelivered.\n"],["register_preview_interceptor","ActionMailer::Previews::ClassMethods","ActionMailer/Previews/ClassMethods.html#method-i-register_preview_interceptor","(interceptor)","<p>Register an Interceptor which will be called before mail is previewed.\nEither a class or a string can …\n"],["register_preview_interceptors","ActionMailer::Previews::ClassMethods","ActionMailer/Previews/ClassMethods.html#method-i-register_preview_interceptors","(*interceptors)","<p>Register one or more Interceptors which will be called before mail is\npreviewed.\n"],["restore_delivery_method","ActionMailer::TestCase::Behavior","ActionMailer/TestCase/Behavior.html#method-i-restore_delivery_method","()",""],["restore_test_deliveries","ActionMailer::TestCase::Behavior","ActionMailer/TestCase/Behavior.html#method-i-restore_test_deliveries","()",""],["set_content_type","ActionMailer::Base","ActionMailer/Base.html#method-i-set_content_type","(m, user_content_type, class_default)","<p>Used by #mail to set the content type of the message.\n<p>It will use the given <code>user_content_type</code>, or multipart …\n"],["set_delivery_method","ActionMailer::TestCase::Behavior","ActionMailer/TestCase/Behavior.html#method-i-set_delivery_method","(method)",""],["set_expected_mail","ActionMailer::TestCase::Behavior","ActionMailer/TestCase/Behavior.html#method-i-set_expected_mail","()",""],["supports_path?","ActionMailer::Base","ActionMailer/Base.html#method-c-supports_path-3F","()","<p>Emails do not support relative path links.\n"],["tests","ActionMailer::TestCase::Behavior::ClassMethods","ActionMailer/TestCase/Behavior/ClassMethods.html#method-i-tests","(mailer)",""],["version","ActionMailer","ActionMailer.html#method-c-version","()","<p>Returns the version of the currently loaded Action Mailer as a\n<code>Gem::Version</code>.\n"],["USAGE","","lib/rails/generators/mailer/USAGE.html","","<p>Description:\n<p>\n\n<pre>Stubs out a new mailer and its views. Passes the mailer name, either\nCamelCased or under_scored, ...</pre>\n"]]}}