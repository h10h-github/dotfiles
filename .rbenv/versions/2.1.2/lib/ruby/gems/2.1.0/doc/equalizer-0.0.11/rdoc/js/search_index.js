var search_data = {"index":{"searchIndex":["equalizer","methods","==()","define_cmp_method()","define_hash_method()","define_inspect_method()","define_methods()","eql?()","included()","new()","contributing","license","readme"],"longSearchIndex":["equalizer","equalizer::methods","equalizer::methods#==()","equalizer#define_cmp_method()","equalizer#define_hash_method()","equalizer#define_inspect_method()","equalizer#define_methods()","equalizer::methods#eql?()","equalizer#included()","equalizer::new()","","",""],"info":[["Equalizer","","Equalizer.html","","<p>Define equality, equivalence and inspection methods\n"],["Equalizer::Methods","","Equalizer/Methods.html","","<p>The comparison methods\n"],["==","Equalizer::Methods","Equalizer/Methods.html#method-i-3D-3D","(other)","<p>Compare the object with other object for equivalency\n<p>@example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">object</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-identifier\">other</span>  <span class=\"ruby-comment\"># =&gt; true or false</span>\n</pre>\n"],["define_cmp_method","Equalizer","Equalizer.html#method-i-define_cmp_method","()","<p>Define an #cmp? method based on the instance&#39;s values identified by\n#keys\n<p>@return [undefined]\n<p>@api …\n"],["define_hash_method","Equalizer","Equalizer.html#method-i-define_hash_method","()","<p>Define a #hash method based on the instance&#39;s values identified by\n#keys\n<p>@return [undefined]\n<p>@api private …\n"],["define_inspect_method","Equalizer","Equalizer.html#method-i-define_inspect_method","()","<p>Define an inspect method that reports the values of the instance&#39;s keys\n<p>@return [undefined]\n<p>@api private …\n"],["define_methods","Equalizer","Equalizer.html#method-i-define_methods","()","<p>Define the equalizer methods based on #keys\n<p>@return [undefined]\n<p>@api private\n"],["eql?","Equalizer::Methods","Equalizer/Methods.html#method-i-eql-3F","(other)","<p>Compare the object with other object for equality\n<p>@example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">object</span>.<span class=\"ruby-identifier\">eql?</span>(<span class=\"ruby-identifier\">other</span>)  <span class=\"ruby-comment\"># =&gt; true or false</span>\n</pre>\n"],["included","Equalizer","Equalizer.html#method-i-included","(descendant)","<p>Hook called when module is included\n<p>@param [Module] descendant\n\n<pre>the module or class including Equalizer</pre>\n"],["new","Equalizer","Equalizer.html#method-c-new","(*keys)","<p>Initialize an Equalizer with the given keys\n<p>Will use the keys with which it is initialized to define  …\n"],["CONTRIBUTING","","CONTRIBUTING_md.html","","<p>Contributing\n<p>If you want your code merged into the mainline, please discuss the proposed\nchanges with …\n"],["LICENSE","","LICENSE.html","","<p>Copyright © 2009-2013 Dan Kubb Copyright © 2012 Markus Schirp (packaging)\n<p>Permission is hereby granted, …\n"],["README","","README_md.html","","<p>equalizer\n<p>Module to define equality, equivalence and inspection methods\n<p><img src=\"http://img.shields.io/gem/v/equalizer.svg\"> …\n"]]}}