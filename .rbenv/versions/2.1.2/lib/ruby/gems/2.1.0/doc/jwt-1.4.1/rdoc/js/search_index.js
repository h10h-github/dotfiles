var search_data = {"index":{"searchIndex":["jwt","decodeerror","expiredsignature","immaturesignature","invalidauderror","invalidiaterror","invalidissuererror","invalidjtierror","invalidsuberror","json","verificationerror","base64url_decode()","base64url_encode()","decode()","decode_header_and_payload()","decode_json()","decoded_segments()","encode()","encode_json()","encoded_header()","encoded_payload()","encoded_signature()","raw_segments()","secure_compare()","sign()","sign_hmac()","sign_rsa()","signature_algorithm_and_key()","verify_rsa()","verify_signature()"],"longSearchIndex":["jwt","jwt::decodeerror","jwt::expiredsignature","jwt::immaturesignature","jwt::invalidauderror","jwt::invalidiaterror","jwt::invalidissuererror","jwt::invalidjtierror","jwt::invalidsuberror","jwt::json","jwt::verificationerror","jwt#base64url_decode()","jwt#base64url_encode()","jwt#decode()","jwt#decode_header_and_payload()","jwt::json#decode_json()","jwt#decoded_segments()","jwt#encode()","jwt::json#encode_json()","jwt#encoded_header()","jwt#encoded_payload()","jwt#encoded_signature()","jwt#raw_segments()","jwt#secure_compare()","jwt#sign()","jwt#sign_hmac()","jwt#sign_rsa()","jwt#signature_algorithm_and_key()","jwt#verify_rsa()","jwt#verify_signature()"],"info":[["JWT","","JWT.html","",""],["JWT::DecodeError","","JWT/DecodeError.html","",""],["JWT::ExpiredSignature","","JWT/ExpiredSignature.html","",""],["JWT::ImmatureSignature","","JWT/ImmatureSignature.html","",""],["JWT::InvalidAudError","","JWT/InvalidAudError.html","",""],["JWT::InvalidIatError","","JWT/InvalidIatError.html","",""],["JWT::InvalidIssuerError","","JWT/InvalidIssuerError.html","",""],["JWT::InvalidJtiError","","JWT/InvalidJtiError.html","",""],["JWT::InvalidSubError","","JWT/InvalidSubError.html","",""],["JWT::Json","","JWT/Json.html","",""],["JWT::VerificationError","","JWT/VerificationError.html","",""],["base64url_decode","JWT","JWT.html#method-i-base64url_decode","(str)",""],["base64url_encode","JWT","JWT.html#method-i-base64url_encode","(str)",""],["decode","JWT","JWT.html#method-i-decode","(jwt, key=nil, verify=true, options={}, &keyfinder)",""],["decode_header_and_payload","JWT","JWT.html#method-i-decode_header_and_payload","(header_segment, payload_segment)",""],["decode_json","JWT::Json","JWT/Json.html#method-i-decode_json","(encoded)",""],["decoded_segments","JWT","JWT.html#method-i-decoded_segments","(jwt, verify=true)",""],["encode","JWT","JWT.html#method-i-encode","(payload, key, algorithm='HS256', header_fields={})",""],["encode_json","JWT::Json","JWT/Json.html#method-i-encode_json","(raw)",""],["encoded_header","JWT","JWT.html#method-i-encoded_header","(algorithm='HS256', header_fields={})",""],["encoded_payload","JWT","JWT.html#method-i-encoded_payload","(payload)",""],["encoded_signature","JWT","JWT.html#method-i-encoded_signature","(signing_input, key, algorithm)",""],["raw_segments","JWT","JWT.html#method-i-raw_segments","(jwt, verify=true)",""],["secure_compare","JWT","JWT.html#method-i-secure_compare","(a, b)","<p>From devise constant-time comparison algorithm to prevent timing attacks\n"],["sign","JWT","JWT.html#method-i-sign","(algorithm, msg, key)",""],["sign_hmac","JWT","JWT.html#method-i-sign_hmac","(algorithm, msg, key)",""],["sign_rsa","JWT","JWT.html#method-i-sign_rsa","(algorithm, msg, private_key)",""],["signature_algorithm_and_key","JWT","JWT.html#method-i-signature_algorithm_and_key","(header, key, &keyfinder)",""],["verify_rsa","JWT","JWT.html#method-i-verify_rsa","(algorithm, public_key, signing_input, signature)",""],["verify_signature","JWT","JWT.html#method-i-verify_signature","(algo, key, signing_input, signature)",""]]}}