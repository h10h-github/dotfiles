var search_data = {"index":{"searchIndex":["miniportile","activate()","archives_path()","compile()","computed_options()","configure()","configure_defaults()","configure_options()","configure_prefix()","configured?()","cook()","detect_host()","download()","download_file()","download_file_ftp()","download_file_http()","downloaded?()","execute()","extract()","extract_file()","gcc_cmd()","install()","installed?()","log_file()","make_cmd()","message()","new()","newer?()","output()","patch()","path()","port_path()","tar_compression_switch()","tar_exe()","tmp_path()","which()","with_tempfile()","work_path()","history","license","readme"],"longSearchIndex":["miniportile","miniportile#activate()","miniportile#archives_path()","miniportile#compile()","miniportile#computed_options()","miniportile#configure()","miniportile#configure_defaults()","miniportile#configure_options()","miniportile#configure_prefix()","miniportile#configured?()","miniportile#cook()","miniportile#detect_host()","miniportile#download()","miniportile#download_file()","miniportile#download_file_ftp()","miniportile#download_file_http()","miniportile#downloaded?()","miniportile#execute()","miniportile#extract()","miniportile#extract_file()","miniportile#gcc_cmd()","miniportile#install()","miniportile#installed?()","miniportile#log_file()","miniportile#make_cmd()","miniportile#message()","miniportile::new()","miniportile#newer?()","miniportile#output()","miniportile#patch()","miniportile#path()","miniportile#port_path()","miniportile#tar_compression_switch()","miniportile#tar_exe()","miniportile#tmp_path()","miniportile#which()","miniportile#with_tempfile()","miniportile#work_path()","","",""],"info":[["MiniPortile","","MiniPortile.html","",""],["activate","MiniPortile","MiniPortile.html#method-i-activate","()",""],["archives_path","MiniPortile","MiniPortile.html#method-i-archives_path","()",""],["compile","MiniPortile","MiniPortile.html#method-i-compile","()",""],["computed_options","MiniPortile","MiniPortile.html#method-i-computed_options","()",""],["configure","MiniPortile","MiniPortile.html#method-i-configure","()",""],["configure_defaults","MiniPortile","MiniPortile.html#method-i-configure_defaults","()",""],["configure_options","MiniPortile","MiniPortile.html#method-i-configure_options","()",""],["configure_prefix","MiniPortile","MiniPortile.html#method-i-configure_prefix","()",""],["configured?","MiniPortile","MiniPortile.html#method-i-configured-3F","()",""],["cook","MiniPortile","MiniPortile.html#method-i-cook","()",""],["detect_host","MiniPortile","MiniPortile.html#method-i-detect_host","()",""],["download","MiniPortile","MiniPortile.html#method-i-download","()",""],["download_file","MiniPortile","MiniPortile.html#method-i-download_file","(url, full_path, count = 3)","<p>Slighly modified from RubyInstaller uri_ext, Rubinius configure and\nadaptations of Wayne&#39;s RailsInstaller …\n"],["download_file_ftp","MiniPortile","MiniPortile.html#method-i-download_file_ftp","(uri, full_path)",""],["download_file_http","MiniPortile","MiniPortile.html#method-i-download_file_http","(url, full_path, count = 3)",""],["downloaded?","MiniPortile","MiniPortile.html#method-i-downloaded-3F","()",""],["execute","MiniPortile","MiniPortile.html#method-i-execute","(action, command)",""],["extract","MiniPortile","MiniPortile.html#method-i-extract","()",""],["extract_file","MiniPortile","MiniPortile.html#method-i-extract_file","(file, target)",""],["gcc_cmd","MiniPortile","MiniPortile.html#method-i-gcc_cmd","()",""],["install","MiniPortile","MiniPortile.html#method-i-install","()",""],["installed?","MiniPortile","MiniPortile.html#method-i-installed-3F","()",""],["log_file","MiniPortile","MiniPortile.html#method-i-log_file","(action)",""],["make_cmd","MiniPortile","MiniPortile.html#method-i-make_cmd","()",""],["message","MiniPortile","MiniPortile.html#method-i-message","(text)","<p>print out a message with the logger\n"],["new","MiniPortile","MiniPortile.html#method-c-new","(name, version)",""],["newer?","MiniPortile","MiniPortile.html#method-i-newer-3F","(target, checkpoint)",""],["output","MiniPortile","MiniPortile.html#method-i-output","(text = \"\")","<p>print out a message using the logger but return to a new line\n"],["patch","MiniPortile","MiniPortile.html#method-i-patch","()",""],["path","MiniPortile","MiniPortile.html#method-i-path","()",""],["port_path","MiniPortile","MiniPortile.html#method-i-port_path","()",""],["tar_compression_switch","MiniPortile","MiniPortile.html#method-i-tar_compression_switch","(filename)",""],["tar_exe","MiniPortile","MiniPortile.html#method-i-tar_exe","()",""],["tmp_path","MiniPortile","MiniPortile.html#method-i-tmp_path","()",""],["which","MiniPortile","MiniPortile.html#method-i-which","(cmd)","<p>From: stackoverflow.com/a/5471032/7672 Thanks, Mislav!\n<p>Cross-platform way of finding an executable in …\n"],["with_tempfile","MiniPortile","MiniPortile.html#method-i-with_tempfile","(filename, full_path)",""],["work_path","MiniPortile","MiniPortile.html#method-i-work_path","()",""],["History","","History_txt.html","","<p>0.6.2 / 2014-12-30\n<p>Updated gemspec, license and README to reflect new maintainer.\n\n<p>0.6.1 / 2014-08-03\n"],["LICENSE","","LICENSE_txt.html","","<p>Copyright © 2011-2015 Luis Lavena and Mike Dalessio\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","README_rdoc.html","","<p>MiniPortile\n<p>Source Code\n<p>Bug Reports\n"]]}}