var search_data = {"index":{"searchIndex":["spring","application","applicationmanager","client","binstub","item","command","help","rails","run","status","stop","version","clienterror","commandnotfound","commandwrapper","commands","rails","railsconsole","railsdestroy","railsgenerate","railsrunner","rake","env","gem","json","missingapplication","okjson","error","utf8error","processtitleupdater","sid","server","test","acceptancetest","application","applicationgenerator","railsversion","watchertest","unknownproject","watcher","abstract","polling","abbrev()","active_record_configured?()","add()","add()","add()","after_fork()","after_fork_callbacks()","alive?()","all_commands()","app()","app_env()","app_name()","app_name()","application_config()","application_id()","application_pids()","application_root_path()","arrenc()","arrparse()","assert_failure()","assert_not_stale()","assert_output()","assert_speedup()","assert_stale()","assert_success()","await_reload()","binstub()","binstub_name()","boot()","boot()","boot_server()","build_and_install_gems()","bundle()","bundles_spring?()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","check_stale()","cold_run()","command()","command?()","command_for()","command_help()","command_name()","command_name()","command_name()","command_name()","compute_mtime()","connect_database()","connect_to_application()","controller()","controller_tests_dir()","copy_to()","debug()","decode()","default_rails_env()","description()","description()","description()","description()","description()","description()","description()","disconnect_database()","display()","distance_in_words()","dump()","dump_streams()","eager_preload()","eat()","encode()","env()","env()","env()","env()","env()","exec()","exec_name()","exists?()","exit()","exit_if_finished()","exiting?()","expanded_files()","extract_environment()","falsetok()","fiddle_func()","find_commands()","find_project_root()","first_time()","formatted_help()","forward_signal()","forward_signals()","gem_env()","gem_home()","gem_name()","gemfile()","gemfile()","gemspec()","generate()","generate()","generate_files()","generate_if_missing()","generate_scaffold()","generator()","generator_klass()","hexdec4()","ignore_signals()","initialized?()","install_spring()","interval()","invoke_after_fork_callbacks()","keyenc()","kill()","kill()","last_time()","lex()","load()","loaded_application_features()","log()","log()","log()","log()","log()","log_file()","major()","manually_built_gems()","mark_stale()","max_name_width()","message()","message()","minor()","needs_testunit?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next()","nibble()","nulltok()","numenc()","numtok()","objenc()","objparse()","on_stale()","pairparse()","path()","pgid()","pid()","pidfile_path()","pluralize()","preload()","preload_failed?()","preloaded?()","print_exception()","print_process()","process_alive?()","project_root()","project_root_path()","queue_signals()","rails_3?()","rails_command()","rails_env_for()","rails_version()","rails_version()","read_stream()","read_streams()","redirect_output()","register_command()","remove()","reset_streams()","restart()","restart()","root()","root()","rubydoesenc?()","run()","run()","run()","run()","run()","run()","run!()","run_command()","send_json()","serve()","serve()","server()","server_running?()","set_exit_hook()","set_pgid()","set_process_title()","setup()","setup()","setup()","setup?()","shush_backtraces()","shutdown()","sid()","socket_name()","socket_path()","spring()","spring_binstub()","spring_config()","spring_test_command()","stale?()","start()","start()","start()","start_child()","start_server()","start_wait_thread()","start_watcher()","state()","state!()","status()","stderr()","stdout()","stop()","stop()","stop()","stop()","stop_server()","stop_spring()","strenc()","strtok()","subjects_changed()","subjects_changed()","subst()","surrogate?()","synchronize()","system()","teardown()","terminate()","terminating?()","test()","test_command()","test_root()","textparse()","timing_ratio()","tmp_path()","to_s()","tok()","touch()","truetok()","ucharcopy()","ucharenc()","unquote()","user_home()","valenc()","valparse()","value()","verify_environment()","verify_server_version()","version()","wait()","warm_run()","watch()","watch_method=()","watcher()","watcher()","watcher_class()","watcher_stale?()","with_child()","with_pty()","with_timing()","write_pidfile()"],"longSearchIndex":["spring","spring::application","spring::applicationmanager","spring::client","spring::client::binstub","spring::client::binstub::item","spring::client::command","spring::client::help","spring::client::rails","spring::client::run","spring::client::status","spring::client::stop","spring::client::version","spring::clienterror","spring::commandnotfound","spring::commandwrapper","spring::commands","spring::commands::rails","spring::commands::railsconsole","spring::commands::railsdestroy","spring::commands::railsgenerate","spring::commands::railsrunner","spring::commands::rake","spring::env","spring::gem","spring::json","spring::missingapplication","spring::okjson","spring::okjson::error","spring::okjson::utf8error","spring::processtitleupdater","spring::sid","spring::server","spring::test","spring::test::acceptancetest","spring::test::application","spring::test::applicationgenerator","spring::test::railsversion","spring::test::watchertest","spring::unknownproject","spring::watcher","spring::watcher::abstract","spring::watcher::polling","spring::okjson#abbrev()","spring::application#active_record_configured?()","spring::client::binstub::item#add()","spring::watcher::abstract#add()","spring::watcher::polling#add()","spring::after_fork()","spring::after_fork_callbacks()","spring::applicationmanager#alive?()","spring::client::help#all_commands()","spring::test::acceptancetest#app()","spring::application#app_env()","spring::application#app_name()","spring::env#app_name()","spring::test::application#application_config()","spring::env#application_id()","spring::client::status#application_pids()","spring::application_root_path()","spring::okjson#arrenc()","spring::okjson#arrparse()","spring::test::acceptancetest#assert_failure()","spring::test::watchertest#assert_not_stale()","spring::test::acceptancetest#assert_output()","spring::test::acceptancetest#assert_speedup()","spring::test::watchertest#assert_stale()","spring::test::acceptancetest#assert_success()","spring::test::application#await_reload()","spring::commandwrapper#binstub()","spring::commandwrapper#binstub_name()","spring::server#boot()","spring::server::boot()","spring::client::run#boot_server()","spring::test::applicationgenerator#build_and_install_gems()","spring::test::application#bundle()","spring::test::railsversion#bundles_spring?()","spring::client::binstub::call()","spring::client::binstub#call()","spring::client::command::call()","spring::client::help::call()","spring::client::help#call()","spring::client::rails#call()","spring::client::run#call()","spring::client::status#call()","spring::client::stop#call()","spring::client::version#call()","spring::commandwrapper#call()","spring::commands::rails#call()","spring::commands::railsrunner#call()","spring::watcher::polling#check_stale()","spring::client::run#cold_run()","spring::command()","spring::command?()","spring::client::command_for()","spring::client::help#command_help()","spring::commands::railsconsole#command_name()","spring::commands::railsdestroy#command_name()","spring::commands::railsgenerate#command_name()","spring::commands::railsrunner#command_name()","spring::watcher::polling#compute_mtime()","spring::application#connect_database()","spring::client::run#connect_to_application()","spring::test::application#controller()","spring::test::railsversion#controller_tests_dir()","spring::test::applicationgenerator#copy_to()","spring::test::application#debug()","spring::okjson#decode()","spring::client::run#default_rails_env()","spring::client::binstub::description()","spring::client::help::description()","spring::client::rails::description()","spring::client::status::description()","spring::client::stop::description()","spring::commandwrapper#description()","spring::commands::rails#description()","spring::application#disconnect_database()","spring::client::help#display()","spring::processtitleupdater#distance_in_words()","spring::json::dump()","spring::test::application#dump_streams()","spring::application#eager_preload()","spring::okjson#eat()","spring::okjson#encode()","spring::commandwrapper#env()","spring::commands::railsconsole#env()","spring::commands::railsrunner#env()","spring::commands::rake#env()","spring::test::application#env()","spring::commandwrapper#exec()","spring::commandwrapper#exec_name()","spring::test::application#exists?()","spring::application#exit()","spring::application#exit_if_finished()","spring::application#exiting?()","spring::watcher::polling#expanded_files()","spring::commands::railsrunner#extract_environment()","spring::okjson#falsetok()","spring::sid::fiddle_func()","spring::client::binstub#find_commands()","spring::find_project_root()","spring::test::application#first_time()","spring::client::help#formatted_help()","spring::client::run#forward_signal()","spring::client::run#forward_signals()","spring::client::run#gem_env()","spring::test::application#gem_home()","spring::commandwrapper#gem_name()","spring::gemfile()","spring::test::application#gemfile()","spring::test::applicationgenerator#gemspec()","spring::client::binstub::item#generate()","spring::test::applicationgenerator#generate()","spring::test::applicationgenerator#generate_files()","spring::test::applicationgenerator#generate_if_missing()","spring::test::applicationgenerator#generate_scaffold()","spring::test::acceptancetest#generator()","spring::test::acceptancetest#generator_klass()","spring::okjson#hexdec4()","spring::server#ignore_signals()","spring::application#initialized?()","spring::test::applicationgenerator#install_spring()","spring::processtitleupdater#interval()","spring::application#invoke_after_fork_callbacks()","spring::okjson#keyenc()","spring::client::run#kill()","spring::env#kill()","spring::test::application#last_time()","spring::okjson#lex()","spring::json::load()","spring::application#loaded_application_features()","spring::application#log()","spring::applicationmanager#log()","spring::client::run#log()","spring::env#log()","spring::server#log()","spring::test::application#log_file()","spring::test::railsversion#major()","spring::test::applicationgenerator#manually_built_gems()","spring::watcher::abstract#mark_stale()","spring::client::help#max_name_width()","spring::missingapplication#message()","spring::unknownproject#message()","spring::test::railsversion#minor()","spring::test::railsversion#needs_testunit?()","spring::application::new()","spring::applicationmanager::new()","spring::client::binstub::new()","spring::client::binstub::item::new()","spring::client::command::new()","spring::client::help::new()","spring::client::run::new()","spring::commandwrapper::new()","spring::env::new()","spring::missingapplication::new()","spring::processtitleupdater::new()","spring::server::new()","spring::test::application::new()","spring::test::applicationgenerator::new()","spring::test::railsversion::new()","spring::unknownproject::new()","spring::watcher::abstract::new()","spring::watcher::polling::new()","spring::processtitleupdater#next()","spring::okjson#nibble()","spring::okjson#nulltok()","spring::okjson#numenc()","spring::okjson#numtok()","spring::okjson#objenc()","spring::okjson#objparse()","spring::watcher::abstract#on_stale()","spring::okjson#pairparse()","spring::test::application#path()","spring::sid::pgid()","spring::env#pid()","spring::env#pidfile_path()","spring::processtitleupdater#pluralize()","spring::application#preload()","spring::application#preload_failed?()","spring::application#preloaded?()","spring::application#print_exception()","spring::client::status#print_process()","spring::test::application#process_alive?()","spring::env#project_root()","spring::project_root_path()","spring::client::run#queue_signals()","spring::test::railsversion#rails_3?()","spring::client::binstub::rails_command()","spring::server#rails_env_for()","spring::test::acceptancetest#rails_version()","spring::test::application#rails_version()","spring::test::application#read_stream()","spring::test::application#read_streams()","spring::server#redirect_output()","spring::register_command()","spring::client::binstub::item#remove()","spring::application#reset_streams()","spring::applicationmanager#restart()","spring::watcher::abstract#restart()","spring::env#root()","spring::test::applicationgenerator#root()","spring::okjson#rubydoesenc?()","spring::application#run()","spring::applicationmanager#run()","spring::client::run()","spring::client::run#run()","spring::processtitleupdater::run()","spring::test::application#run()","spring::test::application#run!()","spring::client::run#run_command()","spring::client::run#send_json()","spring::application#serve()","spring::server#serve()","spring::client::run#server()","spring::env#server_running?()","spring::server#set_exit_hook()","spring::server#set_pgid()","spring::server#set_process_title()","spring::application#setup()","spring::commandwrapper#setup()","spring::test::watchertest#setup()","spring::commandwrapper#setup?()","spring::application#shush_backtraces()","spring::server#shutdown()","spring::sid::sid()","spring::env#socket_name()","spring::env#socket_path()","spring::test::application#spring()","spring::client::binstub#spring_binstub()","spring::test::application#spring_config()","spring::test::application#spring_test_command()","spring::watcher::abstract#stale?()","spring::applicationmanager#start()","spring::watcher::abstract#start()","spring::watcher::polling#start()","spring::applicationmanager#start_child()","spring::server#start_server()","spring::applicationmanager#start_wait_thread()","spring::application#start_watcher()","spring::application#state()","spring::application#state!()","spring::client::binstub::item#status()","spring::test::application#stderr()","spring::test::application#stdout()","spring::applicationmanager#stop()","spring::env#stop()","spring::watcher::abstract#stop()","spring::watcher::polling#stop()","spring::client::run#stop_server()","spring::test::application#stop_spring()","spring::okjson#strenc()","spring::okjson#strtok()","spring::watcher::abstract#subjects_changed()","spring::watcher::polling#subjects_changed()","spring::okjson#subst()","spring::okjson#surrogate?()","spring::applicationmanager#synchronize()","spring::test::applicationgenerator#system()","spring::test::watchertest#teardown()","spring::application#terminate()","spring::application#terminating?()","spring::test::application#test()","spring::test::railsversion#test_command()","spring::test::applicationgenerator#test_root()","spring::okjson#textparse()","spring::test::application#timing_ratio()","spring::env#tmp_path()","spring::test::railsversion#to_s()","spring::okjson#tok()","spring::test::watchertest#touch()","spring::okjson#truetok()","spring::okjson#ucharcopy()","spring::okjson#ucharenc()","spring::okjson#unquote()","spring::test::application#user_home()","spring::okjson#valenc()","spring::okjson#valparse()","spring::processtitleupdater#value()","spring::verify_environment()","spring::client::run#verify_server_version()","spring::env#version()","spring::application#wait()","spring::client::run#warm_run()","spring::watch()","spring::watch_method=()","spring::watcher()","spring::test::watchertest#watcher()","spring::test::watchertest#watcher_class()","spring::application#watcher_stale?()","spring::applicationmanager#with_child()","spring::application#with_pty()","spring::test::application#with_timing()","spring::server#write_pidfile()"],"info":[["Spring","","Spring.html","","<p>Some parts adapted from golang.org/src/pkg/json/decode.go and\ngolang.org/src/pkg/utf8/utf8.go\n"],["Spring::Application","","Spring/Application.html","",""],["Spring::ApplicationManager","","Spring/ApplicationManager.html","",""],["Spring::Client","","Spring/Client.html","",""],["Spring::Client::Binstub","","Spring/Client/Binstub.html","",""],["Spring::Client::Binstub::Item","","Spring/Client/Binstub/Item.html","",""],["Spring::Client::Command","","Spring/Client/Command.html","",""],["Spring::Client::Help","","Spring/Client/Help.html","",""],["Spring::Client::Rails","","Spring/Client/Rails.html","",""],["Spring::Client::Run","","Spring/Client/Run.html","",""],["Spring::Client::Status","","Spring/Client/Status.html","",""],["Spring::Client::Stop","","Spring/Client/Stop.html","",""],["Spring::Client::Version","","Spring/Client/Version.html","",""],["Spring::ClientError","","Spring/ClientError.html","",""],["Spring::CommandNotFound","","Spring/CommandNotFound.html","",""],["Spring::CommandWrapper","","Spring/CommandWrapper.html","",""],["Spring::Commands","","Spring/Commands.html","",""],["Spring::Commands::Rails","","Spring/Commands/Rails.html","",""],["Spring::Commands::RailsConsole","","Spring/Commands/RailsConsole.html","",""],["Spring::Commands::RailsDestroy","","Spring/Commands/RailsDestroy.html","",""],["Spring::Commands::RailsGenerate","","Spring/Commands/RailsGenerate.html","",""],["Spring::Commands::RailsRunner","","Spring/Commands/RailsRunner.html","",""],["Spring::Commands::Rake","","Spring/Commands/Rake.html","",""],["Spring::Env","","Spring/Env.html","",""],["Spring::Gem","","Spring/Gem.html","",""],["Spring::JSON","","Spring/JSON.html","",""],["Spring::MissingApplication","","Spring/MissingApplication.html","",""],["Spring::OkJson","","Spring/OkJson.html","",""],["Spring::OkJson::Error","","Spring/OkJson/Error.html","",""],["Spring::OkJson::Utf8Error","","Spring/OkJson/Utf8Error.html","",""],["Spring::ProcessTitleUpdater","","Spring/ProcessTitleUpdater.html","","<p>Yes, I know this reimplements a bunch of stuff in Active Support, but I\ndon&#39;t want the spring client …\n"],["Spring::SID","","Spring/SID.html","",""],["Spring::Server","","Spring/Server.html","",""],["Spring::Test","","Spring/Test.html","",""],["Spring::Test::AcceptanceTest","","Spring/Test/AcceptanceTest.html","",""],["Spring::Test::Application","","Spring/Test/Application.html","",""],["Spring::Test::ApplicationGenerator","","Spring/Test/ApplicationGenerator.html","",""],["Spring::Test::RailsVersion","","Spring/Test/RailsVersion.html","",""],["Spring::Test::WatcherTest","","Spring/Test/WatcherTest.html","",""],["Spring::UnknownProject","","Spring/UnknownProject.html","",""],["Spring::Watcher","","Spring/Watcher.html","",""],["Spring::Watcher::Abstract","","Spring/Watcher/Abstract.html","","<p>A user of a watcher can use IO.select to wait for changes:\n\n<pre>watcher = MyWatcher.new(root, latency)\nIO.select([watcher]) ...</pre>\n"],["Spring::Watcher::Polling","","Spring/Watcher/Polling.html","",""],["abbrev","Spring::OkJson","Spring/OkJson.html#method-i-abbrev","(s)",""],["active_record_configured?","Spring::Application","Spring/Application.html#method-i-active_record_configured-3F","()",""],["add","Spring::Client::Binstub::Item","Spring/Client/Binstub/Item.html#method-i-add","()",""],["add","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-i-add","(*items)",""],["add","Spring::Watcher::Polling","Spring/Watcher/Polling.html#method-i-add","(*)",""],["after_fork","Spring","Spring.html#method-c-after_fork","(&block)",""],["after_fork_callbacks","Spring","Spring.html#method-c-after_fork_callbacks","()",""],["alive?","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-alive-3F","()",""],["all_commands","Spring::Client::Help","Spring/Client/Help.html#method-i-all_commands","()",""],["app","Spring::Test::AcceptanceTest","Spring/Test/AcceptanceTest.html#method-i-app","()",""],["app_env","Spring::Application","Spring/Application.html#method-i-app_env","()",""],["app_name","Spring::Application","Spring/Application.html#method-i-app_name","()",""],["app_name","Spring::Env","Spring/Env.html#method-i-app_name","()",""],["application_config","Spring::Test::Application","Spring/Test/Application.html#method-i-application_config","()",""],["application_id","Spring::Env","Spring/Env.html#method-i-application_id","()",""],["application_pids","Spring::Client::Status","Spring/Client/Status.html#method-i-application_pids","()",""],["application_root_path","Spring","Spring.html#method-c-application_root_path","()",""],["arrenc","Spring::OkJson","Spring/OkJson.html#method-i-arrenc","(a)",""],["arrparse","Spring::OkJson","Spring/OkJson.html#method-i-arrparse","(ts)","<p>Parses an “array” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["assert_failure","Spring::Test::AcceptanceTest","Spring/Test/AcceptanceTest.html#method-i-assert_failure","(command, expected_output = nil)",""],["assert_not_stale","Spring::Test::WatcherTest","Spring/Test/WatcherTest.html#method-i-assert_not_stale","()",""],["assert_output","Spring::Test::AcceptanceTest","Spring/Test/AcceptanceTest.html#method-i-assert_output","(artifacts, expected)",""],["assert_speedup","Spring::Test::AcceptanceTest","Spring/Test/AcceptanceTest.html#method-i-assert_speedup","(ratio = DEFAULT_SPEEDUP)",""],["assert_stale","Spring::Test::WatcherTest","Spring/Test/WatcherTest.html#method-i-assert_stale","()",""],["assert_success","Spring::Test::AcceptanceTest","Spring/Test/AcceptanceTest.html#method-i-assert_success","(command, expected_output = nil)",""],["await_reload","Spring::Test::Application","Spring/Test/Application.html#method-i-await_reload","()",""],["binstub","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-binstub","()",""],["binstub_name","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-binstub_name","()",""],["boot","Spring::Server","Spring/Server.html#method-i-boot","()",""],["boot","Spring::Server","Spring/Server.html#method-c-boot","()",""],["boot_server","Spring::Client::Run","Spring/Client/Run.html#method-i-boot_server","()",""],["build_and_install_gems","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-build_and_install_gems","()",""],["bundle","Spring::Test::Application","Spring/Test/Application.html#method-i-bundle","()",""],["bundles_spring?","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-i-bundles_spring-3F","()",""],["call","Spring::Client::Binstub","Spring/Client/Binstub.html#method-c-call","(args)",""],["call","Spring::Client::Binstub","Spring/Client/Binstub.html#method-i-call","()",""],["call","Spring::Client::Command","Spring/Client/Command.html#method-c-call","(args)",""],["call","Spring::Client::Help","Spring/Client/Help.html#method-c-call","(args)",""],["call","Spring::Client::Help","Spring/Client/Help.html#method-i-call","()",""],["call","Spring::Client::Rails","Spring/Client/Rails.html#method-i-call","()",""],["call","Spring::Client::Run","Spring/Client/Run.html#method-i-call","()",""],["call","Spring::Client::Status","Spring/Client/Status.html#method-i-call","()",""],["call","Spring::Client::Stop","Spring/Client/Stop.html#method-i-call","()",""],["call","Spring::Client::Version","Spring/Client/Version.html#method-i-call","()",""],["call","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-call","()",""],["call","Spring::Commands::Rails","Spring/Commands/Rails.html#method-i-call","()",""],["call","Spring::Commands::RailsRunner","Spring/Commands/RailsRunner.html#method-i-call","()",""],["check_stale","Spring::Watcher::Polling","Spring/Watcher/Polling.html#method-i-check_stale","()",""],["cold_run","Spring::Client::Run","Spring/Client/Run.html#method-i-cold_run","()",""],["command","Spring","Spring.html#method-c-command","(name)",""],["command?","Spring","Spring.html#method-c-command-3F","(name)",""],["command_for","Spring::Client","Spring/Client.html#method-c-command_for","(name)",""],["command_help","Spring::Client::Help","Spring/Client/Help.html#method-i-command_help","(subject, commands)",""],["command_name","Spring::Commands::RailsConsole","Spring/Commands/RailsConsole.html#method-i-command_name","()",""],["command_name","Spring::Commands::RailsDestroy","Spring/Commands/RailsDestroy.html#method-i-command_name","()",""],["command_name","Spring::Commands::RailsGenerate","Spring/Commands/RailsGenerate.html#method-i-command_name","()",""],["command_name","Spring::Commands::RailsRunner","Spring/Commands/RailsRunner.html#method-i-command_name","()",""],["compute_mtime","Spring::Watcher::Polling","Spring/Watcher/Polling.html#method-i-compute_mtime","()",""],["connect_database","Spring::Application","Spring/Application.html#method-i-connect_database","()",""],["connect_to_application","Spring::Client::Run","Spring/Client/Run.html#method-i-connect_to_application","(client)",""],["controller","Spring::Test::Application","Spring/Test/Application.html#method-i-controller","()",""],["controller_tests_dir","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-i-controller_tests_dir","()",""],["copy_to","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-copy_to","(path)",""],["debug","Spring::Test::Application","Spring/Test/Application.html#method-i-debug","(artifacts)",""],["decode","Spring::OkJson","Spring/OkJson.html#method-i-decode","(s)","<p>Decodes a json document in string s and returns the corresponding ruby\nvalue. String s must be valid …\n"],["default_rails_env","Spring::Client::Run","Spring/Client/Run.html#method-i-default_rails_env","()",""],["description","Spring::Client::Binstub","Spring/Client/Binstub.html#method-c-description","()",""],["description","Spring::Client::Help","Spring/Client/Help.html#method-c-description","()",""],["description","Spring::Client::Rails","Spring/Client/Rails.html#method-c-description","()",""],["description","Spring::Client::Status","Spring/Client/Status.html#method-c-description","()",""],["description","Spring::Client::Stop","Spring/Client/Stop.html#method-c-description","()",""],["description","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-description","()",""],["description","Spring::Commands::Rails","Spring/Commands/Rails.html#method-i-description","()",""],["disconnect_database","Spring::Application","Spring/Application.html#method-i-disconnect_database","()",""],["display","Spring::Client::Help","Spring/Client/Help.html#method-i-display","(name, command)",""],["distance_in_words","Spring::ProcessTitleUpdater","Spring/ProcessTitleUpdater.html#method-i-distance_in_words","(now = Time.now)",""],["dump","Spring::JSON","Spring/JSON.html#method-c-dump","(data)",""],["dump_streams","Spring::Test::Application","Spring/Test/Application.html#method-i-dump_streams","(command, streams)",""],["eager_preload","Spring::Application","Spring/Application.html#method-i-eager_preload","()",""],["eat","Spring::OkJson","Spring/OkJson.html#method-i-eat","(typ, ts)",""],["encode","Spring::OkJson","Spring/OkJson.html#method-i-encode","(x)","<p>Encodes x into a json text. It may contain only Array, Hash, String,\nNumeric, true, false, nil. (Note, …\n"],["env","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-env","(args)",""],["env","Spring::Commands::RailsConsole","Spring/Commands/RailsConsole.html#method-i-env","(args)",""],["env","Spring::Commands::RailsRunner","Spring/Commands/RailsRunner.html#method-i-env","(args)",""],["env","Spring::Commands::Rake","Spring/Commands/Rake.html#method-i-env","(args)",""],["env","Spring::Test::Application","Spring/Test/Application.html#method-i-env","()",""],["exec","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-exec","()",""],["exec_name","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-exec_name","()",""],["exists?","Spring::Test::Application","Spring/Test/Application.html#method-i-exists-3F","()",""],["exit","Spring::Application","Spring/Application.html#method-i-exit","()",""],["exit_if_finished","Spring::Application","Spring/Application.html#method-i-exit_if_finished","()",""],["exiting?","Spring::Application","Spring/Application.html#method-i-exiting-3F","()",""],["expanded_files","Spring::Watcher::Polling","Spring/Watcher/Polling.html#method-i-expanded_files","()",""],["extract_environment","Spring::Commands::RailsRunner","Spring/Commands/RailsRunner.html#method-i-extract_environment","(args)",""],["falsetok","Spring::OkJson","Spring/OkJson.html#method-i-falsetok","(s)",""],["fiddle_func","Spring::SID","Spring/SID.html#method-c-fiddle_func","()",""],["find_commands","Spring::Client::Binstub","Spring/Client/Binstub.html#method-i-find_commands","(name)",""],["find_project_root","Spring","Spring.html#method-c-find_project_root","(current_dir)",""],["first_time","Spring::Test::Application","Spring/Test/Application.html#method-i-first_time","()",""],["formatted_help","Spring::Client::Help","Spring/Client/Help.html#method-i-formatted_help","()",""],["forward_signal","Spring::Client::Run","Spring/Client/Run.html#method-i-forward_signal","(sig, pid)",""],["forward_signals","Spring::Client::Run","Spring/Client/Run.html#method-i-forward_signals","(pid)",""],["gem_env","Spring::Client::Run","Spring/Client/Run.html#method-i-gem_env","()",""],["gem_home","Spring::Test::Application","Spring/Test/Application.html#method-i-gem_home","()",""],["gem_name","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-gem_name","()",""],["gemfile","Spring","Spring.html#method-c-gemfile","()",""],["gemfile","Spring::Test::Application","Spring/Test/Application.html#method-i-gemfile","()",""],["gemspec","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-gemspec","(name)",""],["generate","Spring::Client::Binstub::Item","Spring/Client/Binstub/Item.html#method-i-generate","(fallback = nil)",""],["generate","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-generate","()",""],["generate_files","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-generate_files","()","<p>Sporadic SSL errors keep causing test failures so there are anti-SSL\nworkarounds here\n"],["generate_if_missing","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-generate_if_missing","()",""],["generate_scaffold","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-generate_scaffold","()",""],["generator","Spring::Test::AcceptanceTest","Spring/Test/AcceptanceTest.html#method-i-generator","()",""],["generator_klass","Spring::Test::AcceptanceTest","Spring/Test/AcceptanceTest.html#method-i-generator_klass","()","<p>Extension point for spring-watchers-listen\n"],["hexdec4","Spring::OkJson","Spring/OkJson.html#method-i-hexdec4","(s)",""],["ignore_signals","Spring::Server","Spring/Server.html#method-i-ignore_signals","()","<p>Ignore SIGINT and SIGQUIT otherwise the user typing ^C or ^\\ on the command\nline will kill the server/application. …\n"],["initialized?","Spring::Application","Spring/Application.html#method-i-initialized-3F","()",""],["install_spring","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-install_spring","()",""],["interval","Spring::ProcessTitleUpdater","Spring/ProcessTitleUpdater.html#method-i-interval","()",""],["invoke_after_fork_callbacks","Spring::Application","Spring/Application.html#method-i-invoke_after_fork_callbacks","()",""],["keyenc","Spring::OkJson","Spring/OkJson.html#method-i-keyenc","(k)",""],["kill","Spring::Client::Run","Spring/Client/Run.html#method-i-kill","(sig, pid)",""],["kill","Spring::Env","Spring/Env.html#method-i-kill","(sig)",""],["last_time","Spring::Test::Application","Spring/Test/Application.html#method-i-last_time","()",""],["lex","Spring::OkJson","Spring/OkJson.html#method-i-lex","(s)","<p>Scans s and returns a list of json tokens, excluding white space (as\ndefined in RFC 4627).\n"],["load","Spring::JSON","Spring/JSON.html#method-c-load","(string)",""],["loaded_application_features","Spring::Application","Spring/Application.html#method-i-loaded_application_features","()",""],["log","Spring::Application","Spring/Application.html#method-i-log","(message)",""],["log","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-log","(message)",""],["log","Spring::Client::Run","Spring/Client/Run.html#method-i-log","(message)",""],["log","Spring::Env","Spring/Env.html#method-i-log","(message)",""],["log","Spring::Server","Spring/Server.html#method-i-log","(message)",""],["log_file","Spring::Test::Application","Spring/Test/Application.html#method-i-log_file","()",""],["major","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-i-major","()",""],["manually_built_gems","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-manually_built_gems","()",""],["mark_stale","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-i-mark_stale","()",""],["max_name_width","Spring::Client::Help","Spring/Client/Help.html#method-i-max_name_width","()",""],["message","Spring::MissingApplication","Spring/MissingApplication.html#method-i-message","()",""],["message","Spring::UnknownProject","Spring/UnknownProject.html#method-i-message","()",""],["minor","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-i-minor","()",""],["needs_testunit?","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-i-needs_testunit-3F","()",""],["new","Spring::Application","Spring/Application.html#method-c-new","(manager, original_env)",""],["new","Spring::ApplicationManager","Spring/ApplicationManager.html#method-c-new","(app_env)",""],["new","Spring::Client::Binstub","Spring/Client/Binstub.html#method-c-new","(args)",""],["new","Spring::Client::Binstub::Item","Spring/Client/Binstub/Item.html#method-c-new","(command)",""],["new","Spring::Client::Command","Spring/Client/Command.html#method-c-new","(args)",""],["new","Spring::Client::Help","Spring/Client/Help.html#method-c-new","(args, spring_commands = nil, application_commands = nil)",""],["new","Spring::Client::Run","Spring/Client/Run.html#method-c-new","(args)",""],["new","Spring::CommandWrapper","Spring/CommandWrapper.html#method-c-new","(name, command = nil)",""],["new","Spring::Env","Spring/Env.html#method-c-new","(root = nil)",""],["new","Spring::MissingApplication","Spring/MissingApplication.html#method-c-new","(project_root)",""],["new","Spring::ProcessTitleUpdater","Spring/ProcessTitleUpdater.html#method-c-new","(start = Time.now, &block)",""],["new","Spring::Server","Spring/Server.html#method-c-new","(env = Env.new)",""],["new","Spring::Test::Application","Spring/Test/Application.html#method-c-new","(root)",""],["new","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-c-new","(version_constraint)",""],["new","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-c-new","(string)",""],["new","Spring::UnknownProject","Spring/UnknownProject.html#method-c-new","(current_dir)",""],["new","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-c-new","(root, latency)",""],["new","Spring::Watcher::Polling","Spring/Watcher/Polling.html#method-c-new","(root, latency)",""],["next","Spring::ProcessTitleUpdater","Spring/ProcessTitleUpdater.html#method-i-next","()",""],["nibble","Spring::OkJson","Spring/OkJson.html#method-i-nibble","(c)",""],["nulltok","Spring::OkJson","Spring/OkJson.html#method-i-nulltok","(s)",""],["numenc","Spring::OkJson","Spring/OkJson.html#method-i-numenc","(x)",""],["numtok","Spring::OkJson","Spring/OkJson.html#method-i-numtok","(s)",""],["objenc","Spring::OkJson","Spring/OkJson.html#method-i-objenc","(x)",""],["objparse","Spring::OkJson","Spring/OkJson.html#method-i-objparse","(ts)","<p>Parses an “object” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["on_stale","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-i-on_stale","(&block)",""],["pairparse","Spring::OkJson","Spring/OkJson.html#method-i-pairparse","(ts)","<p>Parses a “member” in the sense of RFC 4627. Returns the parsed values and\nany trailing tokens. …\n"],["path","Spring::Test::Application","Spring/Test/Application.html#method-i-path","(addition)",""],["pgid","Spring::SID","Spring/SID.html#method-c-pgid","()",""],["pid","Spring::Env","Spring/Env.html#method-i-pid","()",""],["pidfile_path","Spring::Env","Spring/Env.html#method-i-pidfile_path","()",""],["pluralize","Spring::ProcessTitleUpdater","Spring/ProcessTitleUpdater.html#method-i-pluralize","(amount, unit)",""],["preload","Spring::Application","Spring/Application.html#method-i-preload","()",""],["preload_failed?","Spring::Application","Spring/Application.html#method-i-preload_failed-3F","()",""],["preloaded?","Spring::Application","Spring/Application.html#method-i-preloaded-3F","()",""],["print_exception","Spring::Application","Spring/Application.html#method-i-print_exception","(stream, error)",""],["print_process","Spring::Client::Status","Spring/Client/Status.html#method-i-print_process","(pid)",""],["process_alive?","Spring::Test::Application","Spring/Test/Application.html#method-i-process_alive-3F","(pid)",""],["project_root","Spring::Env","Spring/Env.html#method-i-project_root","()",""],["project_root_path","Spring","Spring.html#method-c-project_root_path","()",""],["queue_signals","Spring::Client::Run","Spring/Client/Run.html#method-i-queue_signals","()",""],["rails_3?","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-i-rails_3-3F","()",""],["rails_command","Spring::Client::Binstub","Spring/Client/Binstub.html#method-c-rails_command","()",""],["rails_env_for","Spring::Server","Spring/Server.html#method-i-rails_env_for","(args, default_rails_env)",""],["rails_version","Spring::Test::AcceptanceTest","Spring/Test/AcceptanceTest.html#method-i-rails_version","()",""],["rails_version","Spring::Test::Application","Spring/Test/Application.html#method-i-rails_version","()",""],["read_stream","Spring::Test::Application","Spring/Test/Application.html#method-i-read_stream","(stream)",""],["read_streams","Spring::Test::Application","Spring/Test/Application.html#method-i-read_streams","()",""],["redirect_output","Spring::Server","Spring/Server.html#method-i-redirect_output","()","<p>We need to redirect STDOUT and STDERR, otherwise the server will keep the\noriginal FDs open which would …\n"],["register_command","Spring","Spring.html#method-c-register_command","(name, command = nil)",""],["remove","Spring::Client::Binstub::Item","Spring/Client/Binstub/Item.html#method-i-remove","()",""],["reset_streams","Spring::Application","Spring/Application.html#method-i-reset_streams","()",""],["restart","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-restart","()",""],["restart","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-i-restart","()",""],["root","Spring::Env","Spring/Env.html#method-i-root","()",""],["root","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-root","()",""],["rubydoesenc?","Spring::OkJson","Spring/OkJson.html#method-i-rubydoesenc-3F","()",""],["run","Spring::Application","Spring/Application.html#method-i-run","()",""],["run","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-run","(client)","<p>Returns the pid of the process running the command, or nil if the\napplication process died.\n"],["run","Spring::Client","Spring/Client.html#method-c-run","(args)",""],["run","Spring::Client::Run","Spring/Client/Run.html#method-i-run","()",""],["run","Spring::ProcessTitleUpdater","Spring/ProcessTitleUpdater.html#method-c-run","(&block)",""],["run","Spring::Test::Application","Spring/Test/Application.html#method-i-run","(command, opts = {})",""],["run!","Spring::Test::Application","Spring/Test/Application.html#method-i-run-21","(command, options = {})",""],["run_command","Spring::Client::Run","Spring/Client/Run.html#method-i-run_command","(client, application)",""],["send_json","Spring::Client::Run","Spring/Client/Run.html#method-i-send_json","(socket, data)",""],["serve","Spring::Application","Spring/Application.html#method-i-serve","(client)",""],["serve","Spring::Server","Spring/Server.html#method-i-serve","(client)",""],["server","Spring::Client::Run","Spring/Client/Run.html#method-i-server","()",""],["server_running?","Spring::Env","Spring/Env.html#method-i-server_running-3F","()",""],["set_exit_hook","Spring::Server","Spring/Server.html#method-i-set_exit_hook","()",""],["set_pgid","Spring::Server","Spring/Server.html#method-i-set_pgid","()","<p>Boot the server into the process group of the current session. This will\ncause it to be automatically …\n"],["set_process_title","Spring::Server","Spring/Server.html#method-i-set_process_title","()",""],["setup","Spring::Application","Spring/Application.html#method-i-setup","(command)","<p>The command might need to require some files in the main process so that\nthey are cached. For example …\n"],["setup","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-setup","()",""],["setup","Spring::Test::WatcherTest","Spring/Test/WatcherTest.html#method-i-setup","()",""],["setup?","Spring::CommandWrapper","Spring/CommandWrapper.html#method-i-setup-3F","()",""],["shush_backtraces","Spring::Application","Spring/Application.html#method-i-shush_backtraces","()","<p>This feels very naughty\n"],["shutdown","Spring::Server","Spring/Server.html#method-i-shutdown","()",""],["sid","Spring::SID","Spring/SID.html#method-c-sid","()",""],["socket_name","Spring::Env","Spring/Env.html#method-i-socket_name","()",""],["socket_path","Spring::Env","Spring/Env.html#method-i-socket_path","()",""],["spring","Spring::Test::Application","Spring/Test/Application.html#method-i-spring","()",""],["spring_binstub","Spring::Client::Binstub","Spring/Client/Binstub.html#method-i-spring_binstub","()",""],["spring_config","Spring::Test::Application","Spring/Test/Application.html#method-i-spring_config","()",""],["spring_test_command","Spring::Test::Application","Spring/Test/Application.html#method-i-spring_test_command","()",""],["stale?","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-i-stale-3F","()",""],["start","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-start","()",""],["start","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-i-start","()",""],["start","Spring::Watcher::Polling","Spring/Watcher/Polling.html#method-i-start","()",""],["start_child","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-start_child","(preload = false)",""],["start_server","Spring::Server","Spring/Server.html#method-i-start_server","()",""],["start_wait_thread","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-start_wait_thread","(pid, child)",""],["start_watcher","Spring::Application","Spring/Application.html#method-i-start_watcher","()",""],["state","Spring::Application","Spring/Application.html#method-i-state","(val)",""],["state!","Spring::Application","Spring/Application.html#method-i-state-21","(val)",""],["status","Spring::Client::Binstub::Item","Spring/Client/Binstub/Item.html#method-i-status","(text, stream = $stdout)",""],["stderr","Spring::Test::Application","Spring/Test/Application.html#method-i-stderr","()",""],["stdout","Spring::Test::Application","Spring/Test/Application.html#method-i-stdout","()",""],["stop","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-stop","()",""],["stop","Spring::Env","Spring/Env.html#method-i-stop","()",""],["stop","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-i-stop","()",""],["stop","Spring::Watcher::Polling","Spring/Watcher/Polling.html#method-i-stop","()",""],["stop_server","Spring::Client::Run","Spring/Client/Run.html#method-i-stop_server","()",""],["stop_spring","Spring::Test::Application","Spring/Test/Application.html#method-i-stop_spring","()",""],["strenc","Spring::OkJson","Spring/OkJson.html#method-i-strenc","(s)",""],["strtok","Spring::OkJson","Spring/OkJson.html#method-i-strtok","(s)",""],["subjects_changed","Spring::Watcher::Abstract","Spring/Watcher/Abstract.html#method-i-subjects_changed","()",""],["subjects_changed","Spring::Watcher::Polling","Spring/Watcher/Polling.html#method-i-subjects_changed","()",""],["subst","Spring::OkJson","Spring/OkJson.html#method-i-subst","(u1, u2)",""],["surrogate?","Spring::OkJson","Spring/OkJson.html#method-i-surrogate-3F","(u)",""],["synchronize","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-synchronize","()","<p>We&#39;re not using @mutex.synchronize to avoid the weird\n“&lt;internal:prelude&gt;:10” line …\n"],["system","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-system","(command)",""],["teardown","Spring::Test::WatcherTest","Spring/Test/WatcherTest.html#method-i-teardown","()",""],["terminate","Spring::Application","Spring/Application.html#method-i-terminate","()",""],["terminating?","Spring::Application","Spring/Application.html#method-i-terminating-3F","()",""],["test","Spring::Test::Application","Spring/Test/Application.html#method-i-test","()",""],["test_command","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-i-test_command","()",""],["test_root","Spring::Test::ApplicationGenerator","Spring/Test/ApplicationGenerator.html#method-i-test_root","()",""],["textparse","Spring::OkJson","Spring/OkJson.html#method-i-textparse","(ts)","<p>Parses a “json text” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["timing_ratio","Spring::Test::Application","Spring/Test/Application.html#method-i-timing_ratio","()",""],["tmp_path","Spring::Env","Spring/Env.html#method-i-tmp_path","()",""],["to_s","Spring::Test::RailsVersion","Spring/Test/RailsVersion.html#method-i-to_s","()",""],["tok","Spring::OkJson","Spring/OkJson.html#method-i-tok","(s)","<p>Scans the first token in s and returns a 3-element list, or nil if s does\nnot begin with a valid token. …\n"],["touch","Spring::Test::WatcherTest","Spring/Test/WatcherTest.html#method-i-touch","(file, mtime = nil)",""],["truetok","Spring::OkJson","Spring/OkJson.html#method-i-truetok","(s)",""],["ucharcopy","Spring::OkJson","Spring/OkJson.html#method-i-ucharcopy","(t, s, i)","<p>Copies the valid UTF-8 bytes of a single character from string s at\nposition i to I/O object t, and returns …\n"],["ucharenc","Spring::OkJson","Spring/OkJson.html#method-i-ucharenc","(a, i, u)","<p>Encodes unicode character u as UTF-8 bytes in string a at position i.\nReturns the number of bytes written. …\n"],["unquote","Spring::OkJson","Spring/OkJson.html#method-i-unquote","(q)","<p>Converts a quoted json string literal q into a UTF-8-encoded string. The\nrules are different than for …\n"],["user_home","Spring::Test::Application","Spring/Test/Application.html#method-i-user_home","()",""],["valenc","Spring::OkJson","Spring/OkJson.html#method-i-valenc","(x)",""],["valparse","Spring::OkJson","Spring/OkJson.html#method-i-valparse","(ts)","<p>Parses a “value” in the sense of RFC 4627. Returns the parsed value and any\ntrailing tokens. …\n"],["value","Spring::ProcessTitleUpdater","Spring/ProcessTitleUpdater.html#method-i-value","()",""],["verify_environment","Spring","Spring.html#method-c-verify_environment","()",""],["verify_server_version","Spring::Client::Run","Spring/Client/Run.html#method-i-verify_server_version","()",""],["version","Spring::Env","Spring/Env.html#method-i-version","()",""],["wait","Spring::Application","Spring/Application.html#method-i-wait","(pid, streams, client)",""],["warm_run","Spring::Client::Run","Spring/Client/Run.html#method-i-warm_run","()",""],["watch","Spring","Spring.html#method-c-watch","(*items)",""],["watch_method=","Spring","Spring.html#method-c-watch_method-3D","(method)",""],["watcher","Spring","Spring.html#method-c-watcher","()",""],["watcher","Spring::Test::WatcherTest","Spring/Test/WatcherTest.html#method-i-watcher","()",""],["watcher_class","Spring::Test::WatcherTest","Spring/Test/WatcherTest.html#method-i-watcher_class","()",""],["watcher_stale?","Spring::Application","Spring/Application.html#method-i-watcher_stale-3F","()",""],["with_child","Spring::ApplicationManager","Spring/ApplicationManager.html#method-i-with_child","()",""],["with_pty","Spring::Application","Spring/Application.html#method-i-with_pty","()",""],["with_timing","Spring::Test::Application","Spring/Test/Application.html#method-i-with_timing","()",""],["write_pidfile","Spring::Server","Spring/Server.html#method-i-write_pidfile","()",""]]}}