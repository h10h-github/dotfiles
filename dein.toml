[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("python3")'
on_cmd = 'Denite'
depend = ['neomru.vim']
on_event = 'Bufread'
hook_post_source = '''
  call denite#custom#var('file_rec', 'command',
        \ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'final_opts', [])
  call denite#custom#var('grep', 'separator', [])
  call denite#custom#var('grep', 'default_opts',
        \ ['--nocolor', '--nogroup'])
'''
hook_add = '''
  nnoremap <silent> <C-k><C-f> :<C-u>Denite file_rec<CR>
  nnoremap <silent> <C-k><C-g> :<C-u>Denite grep<CR>
  nnoremap <silent> <C-k><C-l> :<C-u>Denite line<CR>
  nnoremap <silent> <C-k><C-u> :<C-u>Denite file_mru<CR>
  nnoremap <silent> <C-k><C-y> :<C-u>Denite neoyank<CR>
  nnoremap <silent> <C-k><C-]> :<C-u>DeniteCursorWord grep<CR>
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
depends = 'denite.nvim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neoyank.vim'
depends = 'denite.nvim'
on_event = 'TextYankPost'

[[plugins]]
repo = 'rking/ag.vim'
depends = 'denite.nvim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depend = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    let g:deoplete#enable_smart_case = 1
    " <S-TAB>: completion back.
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # カラースキームAntares
repo = 'Haron-Prime/Antares'
hook_add = '''
  au MyAutoCmd VimEnter * nested colorscheme  Antares
'''

[[plugins]] # pugプラグイン
repo = 'digitaltoad/vim-pug'

[[plugins]] # muchitプラグイン
repo = 'tmhedberg/matchit'

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = { 
    \   'colorscheme': 'wombat'
    \}
'''

[[plugins]]
repo = 'scrooloose/syntastic'
on_ft = 'html,javascript'
hook_add = '''
  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*
  let g:syntastic_always_populate_loc_list = 1
  let g:syntastic_auto_loc_list = 1
  let g:syntastic_check_on_open = 1
  let g:syntastic_check_on_wq = 0
  let g:syntastic_mode_map = {
    \ "mode": "active",
    \ "active_filetypes": ["ruby"],
    \ "passive_filetypes": ["html", "javascript"] }
'''

[[plugins]]
repo = 'soramugi/auto-ctags.vim'
hook_add = '''
  let g:auto_ctags = 1
  let g:auto_ctags_directory_list = ['.git']
  set tags=.git/tags
'''

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
  let g:auto_ctags = 1
  let g:auto_ctags_directory_list = ['.git']
  set tags=.git/tags
'''

[[plugins]]
repo = 'vim-scripts/surround.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentline_char = '|'
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  vmap <Enter> <Plug>(EasyAlign)
  nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'fuenor/JpFormat.vim'
hook_add = '''
  nnoremap gL :JpFormatAll!<CR>
'''

[[plugins]]  # qfixhowmプラグイン
repo = 'fuenor/qfixhowm'

